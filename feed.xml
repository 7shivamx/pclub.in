<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming Club IIT Kanpur</title>
    <description>The Programming Club, IIT Kanpur
</description>
    <link>http://pclub.in/</link>
    <atom:link href="http://pclub.in/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 17 Mar 2017 19:13:21 +0000</pubDate>
    <lastBuildDate>Fri, 17 Mar 2017 19:13:21 +0000</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>I Got My PR Accepted!</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/NFf5CQ6.jpg&quot; alt=&quot;&quot; /&gt;
This post is a list of students who managed to get a pull request accepted successfully (and get a TShirt). Congratulations!&lt;/p&gt;

&lt;p&gt;Name: Anant Prakash&lt;br /&gt;
GitHub: &lt;a href=&quot;https://github.com/APwhitehat&quot;&gt;APwhitehat&lt;/a&gt;&lt;br /&gt;
Project: https://github.com/catapult-project/catapult&lt;br /&gt;
Pull Request: https://codereview.chromium.org/2670003007/&lt;/p&gt;

&lt;p&gt;Name: Vardhan Gupta&lt;br /&gt;
GitHub: &lt;a href=&quot;https://github.com/vardhan26&quot;&gt;vardhan26&lt;/a&gt;&lt;br /&gt;
Project and PR: https://github.com/whatwg/html/pull/2350&lt;/p&gt;

&lt;p&gt;Name: Parv Mor&lt;br /&gt;
GitHub: &lt;a href=&quot;https://github.com/parvmor&quot;&gt;parvmor&lt;/a&gt;&lt;br /&gt;
Project and PR: https://github.com/pybee/batavia/pull/421&lt;/p&gt;

&lt;p&gt;Name: Bhavishya Gopesh&lt;br /&gt;
GitHub: &lt;a href=&quot;https://github.com/bhavishyagopesh&quot;&gt;bhavishyagopesh&lt;/a&gt;&lt;br /&gt;
Project and PR: https://github.com/python-hyper/hyper-h2/pull/464&lt;/p&gt;

&lt;p&gt;Name: Hritwik Taneja&lt;br /&gt;
GitHub: &lt;a href=&quot;https://github.com/hritwik567&quot;&gt;hritwik567&lt;/a&gt;&lt;br /&gt;
Project and PR: https://github.com/mozilla/thimble.mozilla.org/pull/1732&lt;/p&gt;
</description>
        <pubDate>Thu, 16 Mar 2017 17:53:21 +0000</pubDate>
        <link>http://pclub.in/events/2017/03/16/praccepted.html</link>
        <guid isPermaLink="true">http://pclub.in/events/2017/03/16/praccepted.html</guid>
        
        <category>git</category>
        
        <category>opensource</category>
        
        
        <category>events</category>
        
      </item>
    
      <item>
        <title>Web Forum</title>
        <description>&lt;h1 id=&quot;web-forum&quot;&gt;&lt;a href=&quot;https://github.com/heyitssat/Forum.github.io&quot;&gt;Web forum&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;This project is a forum where you can Read posts, Write , Discuss , Share your views and Ask your questions. It organizes all content in various tags to make it easier for you to connect with people of same interests. Here ideas and views on a particular issue can be exchanged.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/heyitssat/heyitssat.github.io/master/report_image/1%20(2).png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ckeditor and kcfinder provides you with the tools you may feel the need of to make your post interactive.&lt;/li&gt;
  &lt;li&gt;Phpmailer is used to send emails for user verification making it secure.&lt;/li&gt;
  &lt;li&gt;Use of materealizecss and bootstrap makes the portal interactive and responsive.&lt;/li&gt;
  &lt;li&gt;Back-end programming is coded in php and database stored using mysql.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Website: &lt;a href=&quot;https://heyitssat.github.io/&quot;&gt;https://heyitssat.github.io/&lt;/a&gt; 
Github Wiki: &lt;a href=&quot;https://github.com/heyitssat/Project_pragati/wiki&quot;&gt;Forum wiki&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Jan 2017 11:28:00 +0000</pubDate>
        <link>http://pclub.in/project/2017/01/08/web_forum.html</link>
        <guid isPermaLink="true">http://pclub.in/project/2017/01/08/web_forum.html</guid>
        
        <category>summer16</category>
        
        <category>project</category>
        
        
        <category>project</category>
        
        <category>Project</category>
        
      </item>
    
      <item>
        <title>Install Fest: Debian</title>
        <description>&lt;h1 id=&quot;installing-debian-jessie&quot;&gt;Installing Debian Jessie&lt;/h1&gt;

&lt;p&gt;This is almost the same for debian stretch.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References:&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Official &lt;a href=&quot;https://d-i.debian.org/manual/en.i386/apa.html&quot;&gt;InstallationHowto&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://acer--uk.custhelp.com/app/answers/detail/a_id/37059/~/windows-10%3A-enable-or-disable-fast-startup&quot;&gt;Turning off FastBoot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Look at &lt;a href=&quot;https://technet.microsoft.com/en-in/library/dn481258.aspx&quot;&gt;turning off Secure Boot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Make some &lt;a href=&quot;https://technet.microsoft.com/en-us/library/gg309169.aspx&quot;&gt;free space&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Get bootable drive.&lt;/li&gt;
  &lt;li&gt;Make free space of at least 8 - 10 GB.&lt;/li&gt;
  &lt;li&gt;Turn off FastBoot and then Secure Boot.&lt;/li&gt;
  &lt;li&gt;Boot using the Installation USB.&lt;/li&gt;
  &lt;li&gt;Select “Graphical Install” or “Install”
&lt;img src=&quot;http://i.imgur.com/LqVGmO0.png&quot; alt=&quot;one&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Select language, location, keymap(American English works)
&lt;img src=&quot;http://i.imgur.com/BFPDHee.png&quot; alt=&quot;two&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Let it detect network hardware. If you’re using a LAN cable with a properly
configured router(recommended), it should detect DHCP automatically. If not, you
can set it up manually(like you set for your room). LAN cable is still recommended, 
since wireless may not work out of the box.
&lt;img src=&quot;http://i.imgur.com/8ec3Zkn.png&quot; alt=&quot;three&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Enter hostname (your choice).&lt;/li&gt;
  &lt;li&gt;Make a root(admin) password. You can leave this empty(which is absolutely OK, since the system
then makes your user a ‘sudo-er’ (you can perform actions as root using ‘sudo’ command).
&lt;img src=&quot;http://i.imgur.com/ocd8NcX.png&quot; alt=&quot;four&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Setup your user. Enter name, username, password.&lt;/li&gt;
  &lt;li&gt;Let the clock be setup and wait for the partioner to open.&lt;/li&gt;
  &lt;li&gt;Choose the ‘Manual’ method for partitioning. 
&lt;img src=&quot;http://i.imgur.com/1Esfyqr.png&quot; alt=&quot;five&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Select the partition with free space that you’ve just created in step 2. Select ‘Automatically 
Partition the free space’ and proceed. Select ‘All Files in new partition’. 
&lt;img src=&quot;http://i.imgur.com/lKYJsji.png&quot; alt=&quot;six&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Finish partitioning and write the changes to disk.
&lt;img src=&quot;http://i.imgur.com/Y63c7tI.png&quot; alt=&quot;seven&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Configure the package manager to not scan any extra CD/DVD.&lt;/li&gt;
  &lt;li&gt;You can select a network mirror if you want, but if you’re using a DVD, it is not needed.
If you do use one, select ‘India’ as your country and iitk as your mirror.&lt;/li&gt;
  &lt;li&gt;Choose whether you want to take part in a user survey.&lt;/li&gt;
  &lt;li&gt;Select the software you want to install (GNOME or another DE is recommended).
&lt;img src=&quot;http://i.imgur.com/onZRZQa.png&quot; alt=&quot;nine&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Choose whether to use nonfree and contrib software (you can, it usually helps).
&lt;img src=&quot;http://i.imgur.com/x4AXqU2.png&quot; alt=&quot;ten&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Install grub. It should detect MS Windows. If not, you can always set it up later
(This won’t erase Windows!) 
&lt;img src=&quot;http://i.imgur.com/dm8wzsX.png?1&quot; alt=&quot;eleven&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Choose your hard drive (usually /dev/sda) when choosing where to install grub.
&lt;img src=&quot;http://i.imgur.com/mIxydte.png?1&quot; alt=&quot;twelve&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Installation is complete, reboot.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 06 Jan 2017 19:27:00 +0000</pubDate>
        <link>http://pclub.in/2017/01/06/debianinstall.html</link>
        <guid isPermaLink="true">http://pclub.in/2017/01/06/debianinstall.html</guid>
        
        
      </item>
    
      <item>
        <title>Install Fest: Ubuntu</title>
        <description>&lt;h2 id=&quot;ubuntu-installation-guide&quot;&gt;Ubuntu installation guide&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Insert the bootable USB stick, reboot the system and instruct the &lt;strong&gt;BIOS&lt;/strong&gt; to boot from the USB by pressing a special function key (usually &lt;strong&gt;F9&lt;/strong&gt;, &lt;strong&gt;F10&lt;/strong&gt; or &lt;strong&gt;F12&lt;/strong&gt; depending on your device) after the boot up a new grub screen should appear on the screen. From the menu select &lt;strong&gt;Install Ubuntu&lt;/strong&gt; and press &lt;strong&gt;Enter&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;After this a completely functional Ubuntu system running in live-mode will start up. On the launcher on left side hit on the second icon from top, &lt;strong&gt;Install Ubuntu 16.04 LTS&lt;/strong&gt;, and the installer utility will start. Choose language and hit &lt;strong&gt;Continue&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;In &lt;strong&gt;Preparing to install ubuntu&lt;/strong&gt; click &lt;strong&gt;Continue&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://s24.postimg.org/fc1lev4tx/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In &lt;strong&gt;Installation type&lt;/strong&gt; check the &lt;strong&gt;Something else&lt;/strong&gt; option and hit on &lt;strong&gt;Continue&lt;/strong&gt; button to proceed furthur.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://s24.postimg.org/qcwqjvx2t/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Now we create two partitions one for &lt;strong&gt;&lt;em&gt;root&lt;/em&gt;&lt;/strong&gt; and other for &lt;strong&gt;&lt;em&gt;home&lt;/em&gt;&lt;/strong&gt;. To create the first partition, the &lt;strong&gt;&lt;em&gt;root&lt;/em&gt;&lt;/strong&gt; partition select the free space (the shrink space from windows created earlier) and hit on the &lt;strong&gt;+&lt;/strong&gt; icon below. On partition settings use the following configurations and hit &lt;strong&gt;OK&lt;/strong&gt; to continue:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   Size = at least 20000 MB
   Type for the new partition = Primary
   Location for the new partition = Beginning
   Use as = EXT4 journaling file system
   Mount point = /
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://s24.postimg.org/oz53okxth/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s24.postimg.org/h7odq0to5/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Create the &lt;strong&gt;&lt;em&gt;home&lt;/em&gt;&lt;/strong&gt; partition using the same steps as above. Use all the available free space left for home partition size. The partition settings should look like this:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   Size = all remaining free space
   Type for the new partition = Primary
   Location for the new partition = Beginning
   Use as = EXT4 journaling file system
   Mount point = /home
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;https://s24.postimg.org/69d47u52t/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Hit the &lt;strong&gt;Install Now&lt;/strong&gt; button to apply changes and start the installation process. An alert regarding swap space will appear click on &lt;strong&gt;Continue&lt;/strong&gt;. Again a pop-up window will appear, hit &lt;strong&gt;Continue&lt;/strong&gt; to write changes to disc and the installation process will now begin.&lt;/li&gt;
  &lt;li&gt;Next select a nearby city and hit &lt;strong&gt;Continue&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Next select &lt;strong&gt;keyboard layout&lt;/strong&gt; and hit &lt;strong&gt;Continue&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fill up the &lt;strong&gt;Who are you?&lt;/strong&gt; window and hit &lt;strong&gt;Continue&lt;/strong&gt;. From here installation process will run automatically till it reaches the end.
 &lt;img src=&quot;https://s24.postimg.org/fv6oo4w8l/6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;After installation restart the system and choose &lt;strong&gt;Ubuntu 16.04&lt;/strong&gt; from the &lt;strong&gt;Grub&lt;/strong&gt; menu and now you can enjoy the vivid features of &lt;strong&gt;Ubuntu&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 06 Jan 2017 19:20:00 +0000</pubDate>
        <link>http://pclub.in/2017/01/06/ubuntuinstall.html</link>
        <guid isPermaLink="true">http://pclub.in/2017/01/06/ubuntuinstall.html</guid>
        
        
      </item>
    
      <item>
        <title>Linux Install Fest</title>
        <description>&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Hi all, welcome to the Programming Club Linux Install Fest 2017!&lt;/p&gt;

&lt;p&gt;Here are the separate posts for each supported Linux Distribution:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;/2017/01/06/debianinstall.html&quot;&gt;Install Fest: Debian&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;/2017/01/06/ubuntuinstall.html&quot;&gt;Install Fest: Ubuntu&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;/2017/01/06/installarch.html&quot;&gt;Install Fest: Arch Linux&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;/2017/01/06/Linux-on-Asus-ROG.html&quot;&gt;Installing Ubuntu In Latest Asus Rog PCs&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 06 Jan 2017 14:55:00 +0000</pubDate>
        <link>http://pclub.in/installfest17/2017/01/06/installfest.html</link>
        <guid isPermaLink="true">http://pclub.in/installfest17/2017/01/06/installfest.html</guid>
        
        <category>linux</category>
        
        
        <category>installfest17</category>
        
      </item>
    
      <item>
        <title>Install Fest: Arch Linux</title>
        <description>&lt;h2&gt;Pre-installation&lt;/h2&gt;
&lt;p&gt;Arch Linux should run on any i686 or x86_64 compatible machine with a
  minimum of 256 MB RAM, or 512 MB for x86_64. A basic installation with
  all packages from the base group should take less than 800 MB of disk
  space. As the installation process needs to retrieve packages from a
  remote repository, a working internet connection is required.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Note&lt;/b&gt; : All commands will look like this:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# some_command
&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;some_command&lt;/code&gt; portion is supposed to be typed after the prompt which is usually:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
root@archiso ~ #
&lt;/pre&gt;
&lt;h4&gt;Set the keyboard layout&lt;/h4&gt;
&lt;p&gt;See Archwiki installation page if you really need this, i.e., your keyboard
  is not working as expected.&lt;/p&gt;
&lt;h4&gt;Verify the boot mode&lt;/h4&gt;
&lt;p&gt;If UEFI mode is enabled on an UEFI motherboard, Archiso will boot Arch
  Linux accordingly via systemd-boot. To verify this, list the efivars
  directory:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# ls /sys/firmware/efi/efivars
&lt;/pre&gt;
&lt;h4&gt;Connect to the Internet&lt;/h4&gt;
&lt;p&gt;For wired connection with &lt;b&gt;DHCP&lt;/b&gt; (for example - academic area),
  just connecting a LAN cord to your ethernet port should start the connection.
  You can verify connection on iitk network with the following command:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# ping 172.31.1.1
&lt;/pre&gt;
&lt;p&gt;For networks requiring static ip (such as your rooms), first stop
  dhcpcd service with &lt;code&gt;systemctl stop dhcpcd@&amp;lt;TAB&amp;gt;&lt;/code&gt; (Here &lt;code&gt;&amp;lt;TAB&amp;gt;&lt;/code&gt; refers to pressing the TAB key on the keyboard)
  and then see: &lt;a href=&quot;https://wiki.archlinux.org/index.php/Netctl#Wired&quot;&gt;ArchWiki Network Configuration&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For wireless connections, use:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# wifi-menu
&lt;/pre&gt;
&lt;p&gt;to connect to available networks. You can check connection using the previous command.&lt;/p&gt;
&lt;h4&gt;Update the system clock&lt;/h4&gt;
&lt;p&gt;Use timedatectl(1) to ensure the system clock is accurate:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# timedatectl set-ntp true
&lt;/pre&gt;
&lt;p&gt;To check the service status, use &lt;code&gt;timedatectl status&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Partition the disks&lt;/h4&gt;
&lt;p&gt;You might have already partitioned your disks from windows if you have seen
  the parent guide of this post. So, you will have 3 partitions:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;One partition for the root directory / - approx 50-100gb.&lt;/li&gt;
  &lt;li&gt;A swap partition of approximately your RAM size.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Format the partitions&lt;/h4&gt;
&lt;p&gt;Once the partitions have been created, each must be formatted with an
  appropriate file system. For a list of partitions use:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# lsblk -o name,size,type,mountpoint,fstype

NAME                                                       SIZE TYPE MOUNTPOINT FSTYPE
sda                                                      931.5G disk
├─sda1                                                     260M part            vfat
├─sda2                                                      16M part
├─sda3                                                   416.2G part            ntfs
├─sda4                                                     808M part            ntfs
├─sda5                                                      12G part            swap
├─sda6                                                      10G part            ext4
├─sda7                                                      50G part            ext4
├─sda8                                                   308.5G part            ext4
├─sda9                                                    68.4G part            ext4
├─sda10                                                     50G part            ext4
├─sda11                                                    694M part            ntfs
└─sda12                                                   13.6G part            ntfs

&lt;/pre&gt;
&lt;p&gt;Now, in the example above, my main harddisk is &lt;code&gt;/dev/sda&lt;/code&gt;, yours can be anything. From now
  on, I will refer to it as &lt;code&gt;/dev/sdx&lt;/code&gt; (&lt;code&gt;x&lt;/code&gt; = variable corresponding to your harddisk).&lt;/p&gt;
&lt;p&gt;Now find the partitions you created. They will probably be the ones with the highest index
  (it's still your job to verify that).&lt;/p&gt;
&lt;p&gt;To format the main root partition (the 50-100 gb one), use:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# mkfs.ext4 /dev/sdxy
&lt;/pre&gt;
&lt;p&gt;where &lt;code&gt;y&lt;/code&gt; is the number of the partition from the output of &lt;code&gt;lsblk&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To format the swap partition (the partition with the same size as your RAM), use:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# mkswap /dev/sdxy
&lt;/pre&gt;
&lt;p&gt;where &lt;code&gt;x&lt;/code&gt; is the number of the root partition from the output of &lt;code&gt;lsblk&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;Mount the file systems&lt;/h4&gt;
&lt;p&gt;Mount the root partition to &lt;code&gt;/mnt&lt;/code&gt;, for example:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# mount /dev/sdxy /mnt
&lt;/pre&gt;
&lt;p&gt;Find out if your computer uses UEFI or not. The best way (I know) is to verify
  whether you have a &lt;code&gt;vfat&lt;/code&gt; partition (as in my case &lt;code&gt;/dev/sda1&lt;/code&gt;).
  If yes, then:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# mkdir /mnt/boot
# mount /dev/sdxy
&lt;/pre&gt;
&lt;p&gt;(Here &lt;code&gt;/dev/sdxy&lt;/code&gt; is the &lt;code&gt;vfat&lt;/code&gt; partition)
  Also remember this info(whether you have a UEFI system or not) for one of the future steps.&lt;/p&gt;
&lt;p&gt;Mount the swap partition:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# mkswap /dev/sdxy
&lt;/pre&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;h4&gt;Select the mirrors&lt;/h4&gt;
&lt;p&gt;Packages to be installed must be downloaded from mirror servers, which
  are defined in &lt;code&gt;/etc/pacman.d/mirrorlist&lt;/code&gt;. Since we are in iitk, we will
  use the iitk mirrors. For that, use &lt;code&gt;nano&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# nano /etc/pacman.d/mirrorlist
&lt;/pre&gt;
&lt;p&gt;And insert this line at the very top just below the initial comments:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
Server = http://mirror.cse.iitk.ac.in/archlinux/$repo/os/$arch
&lt;/pre&gt;
&lt;h4&gt;Install the base packages&lt;/h4&gt;
&lt;p&gt;Use the pacstrap script to install the base package group and other useful stuff:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# pacstrap /mnt base wifi-menu dialog iw wpa_supplicant sudo
&lt;/pre&gt;
&lt;h2&gt;Configure the system&lt;/h2&gt;
&lt;h4&gt;Fstab&lt;/h4&gt;
&lt;p&gt;Generate an fstab file:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# genfstab -U /mnt &amp;gt;&amp;gt; /mnt/etc/fstab
&lt;/pre&gt;
&lt;h4&gt;Chroot&lt;/h4&gt;
&lt;p&gt;Change root into the new system:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# arch-chroot /mnt
&lt;/pre&gt;
&lt;h4&gt;Time zone&lt;/h4&gt;
&lt;p&gt;Set the time zone (probably &lt;code&gt;Asia/Kolkata&lt;/code&gt;, since you live in India):&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# ln -s /usr/share/zoneinfo/Asia/Kolkata /etc/localtime
&lt;/pre&gt;
&lt;p&gt;Run hwclock(8) to generate &lt;code&gt;/etc/adjtime&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# hwclock --systohc --localtime
&lt;/pre&gt;
&lt;h4&gt;Locale&lt;/h4&gt;
&lt;p&gt;Open &lt;code&gt;/etc/locale.gen&lt;/code&gt; using &lt;code&gt;nano&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# nano /etc/locale.gen
&lt;/pre&gt;
&lt;p&gt;Go to the line and remove the first &lt;code&gt;#&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
#en_US.UTF-8 UTF-8
&lt;/pre&gt;
&lt;p&gt;Generate localisations with:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# locale-gen
&lt;/pre&gt;
&lt;p&gt;Open &lt;code&gt;/etc/locale.conf&lt;/code&gt; using &lt;code&gt;nano&lt;/code&gt; and add the following line:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
LANG=en_US.UTF-8
&lt;/pre&gt;
&lt;h4&gt;Hostname&lt;/h4&gt;
&lt;p&gt;Create the &lt;code&gt;/etc/hostname&lt;/code&gt; file. A hostname is a name for your pc (You can set that to anything consisting of only letters):&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
myhostname
&lt;/pre&gt;
&lt;p&gt;You will need to add a matching entry to &lt;code&gt;/etc/hosts&lt;/code&gt; (the last line):&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
127.0.0.1       localhost.localdomain   localhost
::1             localhost.localdomain   localhost
127.0.1.1       myhostname.localdomain  myhostname
&lt;/pre&gt;
&lt;h4&gt;Root password&lt;/h4&gt;
&lt;p&gt;Set the root password:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# passwd
&lt;/pre&gt;
&lt;h4&gt;Boot loader&lt;/h4&gt;
&lt;p&gt;If you have an Intel CPU, install the intel-ucode package&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# pacman -S intel-ucode
&lt;/pre&gt;
&lt;p&gt;Now, you need to remember if you have a UEFI system or not.&lt;/p&gt;
&lt;h5&gt;No UEFI&lt;/h5&gt;
&lt;pre class=&quot;example&quot;&gt;
# pacman -S grub os-prober ntfs-3g
# grub-install --target=i386-pc /dev/sdx
# grub-mkconfig -o /boot/grub/grub.cfg
&lt;/pre&gt;
&lt;p&gt;Please replace &lt;code&gt;x&lt;/code&gt; with the character of your harddisk.&lt;/p&gt;
&lt;h5&gt;UEFI&lt;/h5&gt;
&lt;pre class=&quot;example&quot;&gt;
# pacman -S grub os-prober efibootmgr ntfs-3g
# grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=grub
# grub-mkconfig -o /boot/grub/grub.cfg
&lt;/pre&gt;
&lt;h5&gt;After&lt;/h5&gt;
&lt;p&gt;The above steps may sometimes fail to recognize windows. Don't panic, see the reboot section.&lt;/p&gt;
&lt;h4&gt;New User&lt;/h4&gt;
&lt;p&gt;Now, its time to create a new user:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# useradd -m -G wheel -s /bin/bash archie
&lt;/pre&gt;
&lt;p&gt;Here, a new user was added with the username &lt;code&gt;archie&lt;/code&gt; and default shell &lt;code&gt;/bin/bash&lt;/code&gt;.
  Just changing the username should suffice for most people.
  To change the user's password:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# passwd the_username_you_just_set
&lt;/pre&gt;
&lt;p&gt;Now setup &lt;code&gt;sudo&lt;/code&gt; by typing &lt;code&gt;visudo&lt;/code&gt;. This opens up the sudo configuration file in &lt;code&gt;vim&lt;/code&gt;.
  Press &lt;code&gt;&amp;lt;Shift&amp;gt; + g&lt;/code&gt; to goto the end of the file. Now go up, till you see this line:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
## Uncomment to allow members of group wheel to execute any command
# %wheel ALL=(ALL) ALL
&lt;/pre&gt;
&lt;p&gt;Now, carefully place your cursor on the &lt;code&gt;#&lt;/code&gt; just before &lt;code&gt;%wheel&lt;/code&gt; and press &lt;code&gt;x&lt;/code&gt;.
  This will remove the &lt;code&gt;#&lt;/code&gt;. It will now look like this:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
## Uncomment to allow members of group wheel to execute any command
 %wheel ALL=(ALL) ALL
&lt;/pre&gt;
&lt;p&gt;Now type &lt;code&gt;:wq&lt;/code&gt; to save and exit.&lt;/p&gt;
&lt;p&gt;This should give your user sudo rights.&lt;/p&gt;
&lt;h2&gt;Reboot&lt;/h2&gt;
&lt;p&gt;Exit the chroot environment by typing exit or pressing &lt;code&gt;Ctrl+D&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Optionally manually unmount all the partitions with &lt;code&gt;umount -R /mnt&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;Finally, restart the machine by typing &lt;code&gt;reboot&lt;/code&gt;. Now while booting choose
  grub as the default boot option.&lt;/p&gt;
&lt;p&gt;After booting, you will encounter a black screen with option to login.
  You can now log in with your user.&lt;/p&gt;
&lt;h4&gt;Post Reboot GRUB Fix&lt;/h4&gt;
&lt;p&gt;If your Windows did not show up during boot, run this command and check if windows
  shows up on a reboot:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# grub-mkconfig -o /boot/grub/grub.cfg
&lt;/pre&gt;
&lt;h2&gt;Post-installation&lt;/h2&gt;
&lt;p&gt;See &lt;a href=&quot;https://wiki.archlinux.org/index.php/General_recommendations&quot;&gt;General Recommendations&lt;/a&gt; for system management directions and
  post-installation tutorials (like setting up a graphical user
  interface, sound or a touchpad).&lt;/p&gt;
&lt;p&gt;For a list of applications that may be of interest, see &lt;a href=&quot;https://wiki.archlinux.org/index.php/List_of_applications&quot;&gt;List of applications&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Jan 2017 13:05:20 +0000</pubDate>
        <link>http://pclub.in/2017/01/06/installarch.html</link>
        <guid isPermaLink="true">http://pclub.in/2017/01/06/installarch.html</guid>
        
        
      </item>
    
      <item>
        <title>Installing Ubuntu In Latest Asus Rog PCs</title>
        <description>&lt;p&gt;&lt;strong&gt;Problem occurs due to loading of Nvidia Drivers during booting. Follow the following simple steps.&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;When the grub boot loader menu is visible highlight “Try Ubuntu GNOME without installing” (use your up and down arrows)&lt;/li&gt;
  &lt;li&gt;Press “e” on your keyboard, this will allow you to edit the boot config.
You will be brought to a page where you can make some edits.&lt;/li&gt;
  &lt;li&gt;add the following right after the word “splash”
    &lt;blockquote&gt;
      &lt;p&gt;nouveau.modeset=0 tpm_tis.interrupts=0 acpi_osi=Linux i915.preliminary_hw_support=1 idle=nomwait&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Press the “f10” key to boot into the installer&lt;/li&gt;
  &lt;li&gt;When the desktop load move your mouse into the upper left hand corner, when the app launcher shows itself click on the very top icon “Install Ubuntu GNOME 16.04 LTS”&lt;/li&gt;
  &lt;li&gt;Do not install third party software.&lt;/li&gt;
  &lt;li&gt;Then follow the steps to install Ubuntu.&lt;/li&gt;
  &lt;li&gt;After installation click “Keep trying Ubuntu”&lt;/li&gt;
  &lt;li&gt;Shut down (NOT RESTART) your computer, remove installation media, hit enter.&lt;/li&gt;
  &lt;li&gt;Hold down shift then press the power button to turn on your computer. (holding down shift while powering on will load the grub boot menu)&lt;/li&gt;
  &lt;li&gt;When the grub boot menu appears press “e” and make the changes in step 3.&lt;/li&gt;
  &lt;li&gt;Press “f10”&lt;/li&gt;
  &lt;li&gt;Once your back into the desktop open your terminal and enter:
    &lt;blockquote&gt;
      &lt;p&gt;sudo gedit /etc/default/grub&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Find the line that reads ‘GRUB_CMDLINE_LINUX_DEFAULT=”quiet splash”‘ and change it to read
    &lt;blockquote&gt;
      &lt;p&gt;‘GRUB_CMDLINE_LINUX_DEFAULT=”quiet splash nouveau.modeset=0 tpm_tis.interrupts=0 acpi_osi=Linux         i915.preliminary_hw_support=1 idle=nomwait”‘&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Save the changes then exit gedit.&lt;/li&gt;
  &lt;li&gt;In your terminal run the command: sudo update-grub&lt;/li&gt;
  &lt;li&gt;Reboot your computer: sudo reboot.
Enjoy UbuntuGNOME!!!!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Next, we need to install Nvidia Drivers.&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Connect to a network&lt;/li&gt;
  &lt;li&gt;Run the command:
    &lt;blockquote&gt;
      &lt;p&gt;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get -y upgrade &amp;amp;&amp;amp; sudo apt-get -y dist-upgrade&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Remove all Nvidia installs(if any), run this command:
    &lt;blockquote&gt;
      &lt;p&gt;sudo apt-get purge nvidia*&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Run the command:
    &lt;blockquote&gt;
      &lt;p&gt;sudo apt-get install nvidia-361-updates nvidia-prime&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Reboot:
    &lt;blockquote&gt;
      &lt;p&gt;sudo reboot&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Once logged back in move your mouse to the upper left hand corner of your desktop and start typing “Nvidia”&lt;/li&gt;
  &lt;li&gt;Click on “NVIDIA X Server”&lt;/li&gt;
  &lt;li&gt;On the left side of the Nvidia X Server window you will see an option called “PRIME Profiles”.  This is were you         select which video card you would like to use.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Source: https://jeremymdyson.wordpress.com/2016/04/27/ubuntugnome-16-04-on-asus-rog-gl552v/&lt;/p&gt;

</description>
        <pubDate>Fri, 06 Jan 2017 00:00:00 +0000</pubDate>
        <link>http://pclub.in/2017/01/06/Linux-on-Asus-ROG.html</link>
        <guid isPermaLink="true">http://pclub.in/2017/01/06/Linux-on-Asus-ROG.html</guid>
        
        
      </item>
    
      <item>
        <title>WebD: Introduction</title>
        <description>&lt;h1 id=&quot;web-development-lecture-series-introduction&quot;&gt;Web Development Lecture Series: Introduction&lt;/h1&gt;

&lt;h2 id=&quot;basics-of-what-the-browser-does&quot;&gt;Basics of what the browser does&lt;/h2&gt;
&lt;p&gt;Here we briefly describe the back-breaking work the browser does, every time you open your favorite websites.&lt;/p&gt;

&lt;p&gt;The internet does not understand &lt;code class=&quot;highlighter-rouge&quot;&gt;facebook.com&lt;/code&gt;. Yet, everything on the internet has an address. How does this work?&lt;/p&gt;

&lt;p&gt;There is a protocol called &lt;code class=&quot;highlighter-rouge&quot;&gt;IP&lt;/code&gt;, which provides a numeric address to every computer on the internet. So when you open &lt;code class=&quot;highlighter-rouge&quot;&gt;pclub.in&lt;/code&gt;, your computer somehow figures out where the files for the website are stored. Here, we mean that your computer has to find out how to locate the machine storing the files for &lt;code class=&quot;highlighter-rouge&quot;&gt;pclub.in&lt;/code&gt;. Here is what happens:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Your browser talks to a machine called &lt;strong&gt;DNS Server&lt;/strong&gt;, which converts &lt;code class=&quot;highlighter-rouge&quot;&gt;pclub.in&lt;/code&gt; to an IP address. In this case, it is &lt;code class=&quot;highlighter-rouge&quot;&gt;192.30.252.153&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;This IP address is where the files are to be found. So now your computer tells the internet to provide the files placed at that location.&lt;/li&gt;
  &lt;li&gt;The machine pointed to by the IP address above (the computer which stores the files of the website) is called the &lt;strong&gt;server&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;The first file to be loaded is an &lt;code class=&quot;highlighter-rouge&quot;&gt;HTML&lt;/code&gt; web page. This is something which describes the structure of the page, what it contains, and what all other images etc need to be fetched.&lt;/li&gt;
  &lt;li&gt;The browser reads the &lt;code class=&quot;highlighter-rouge&quot;&gt;HTML&lt;/code&gt; file, and figures out the extra files it will need to fetch for that.&lt;/li&gt;
  &lt;li&gt;It fetches some &lt;code class=&quot;highlighter-rouge&quot;&gt;CSS&lt;/code&gt; files (for styling), some &lt;code class=&quot;highlighter-rouge&quot;&gt;JS&lt;/code&gt; files (for interactive behavior), and images.&lt;/li&gt;
  &lt;li&gt;The above files need not all be on &lt;code class=&quot;highlighter-rouge&quot;&gt;pclub.in&lt;/code&gt;. I could link to some image lying at some other website’s location, and the browser would repeat the same procedure as above for that file, finding that website’s location and then getting the image.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;exploring-the-files-being-received&quot;&gt;Exploring the files being received&lt;/h2&gt;
&lt;p&gt;Here’s a simple exercise. Open a new tab in your browser, and press F12. You will see a (scary looking?) panel pop up, to your right or at the bottom. Don’t lose heart, it isn’t all that scary :) It is called &lt;em&gt;Developer Tools&lt;/em&gt;, or related terms, depending on the context.&lt;/p&gt;

&lt;p&gt;Now you need to click on the tab named &lt;code class=&quot;highlighter-rouge&quot;&gt;Network&lt;/code&gt; in that panel. Once you’ve done that, open up &lt;code class=&quot;highlighter-rouge&quot;&gt;pclub.in&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It would probably look somewhat like in the images below.&lt;/p&gt;

&lt;p&gt;For &lt;strong&gt;Chrome&lt;/strong&gt;:
&lt;img src=&quot;/assets/image/article/chrome-network.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For &lt;strong&gt;Firefox&lt;/strong&gt;:
&lt;img src=&quot;/assets/image/article/firefox-network.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’ll be referring to the &lt;strong&gt;Google Chrome&lt;/strong&gt; image.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Note the first entry in the list. It says &lt;code class=&quot;highlighter-rouge&quot;&gt;pclub.in&lt;/code&gt;. That means that you made a request for &lt;code class=&quot;highlighter-rouge&quot;&gt;pclub.in&lt;/code&gt;. You can even see when it finished in the bars on the right.&lt;/li&gt;
  &lt;li&gt;Some &lt;code class=&quot;highlighter-rouge&quot;&gt;css&lt;/code&gt; files follow that request. They are necessary for making the page look good, and provide all the styling information.&lt;/li&gt;
  &lt;li&gt;A little down, there is an entry called &lt;code class=&quot;highlighter-rouge&quot;&gt;pclub.png&lt;/code&gt;. That was a request made for the main PClub image, and as you can see, it made it to your screen.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are plenty more files, which we don’t need to know about so soon. We urge you to give this a shot, try this yourself, and explore (Google) more on this.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;We’ll hope that you have some knowledge of programming, and are comfortable with using a computer.&lt;/p&gt;

&lt;p&gt;In addition, it will be highly preferred if you are using a Linux/Mac machine. Windows imposes restrictions on things you can do, gives you no way of doing things it has no softwares for, and is not Open Source (which, Mac is not too). Nonetheless, we hope that you install SSH and SCP clients on your windows machines, so that you can copy your files to the IIT Kanpur servers and get your homepage ready. Linux users don’t need any special software in most cases (ensure that &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt; command is working in your terminal).&lt;/p&gt;

&lt;p&gt;Some softwares you should have installed for Windows (&lt;strong&gt;before&lt;/strong&gt; the lecture) are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://winscp.net/eng/index.php&quot;&gt;WinSCP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.putty.org/&quot;&gt;PuTTY&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html&quot;&gt;PSCP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, to be able to benefit from the lecture, you are strongly recommended to get your IITK Homepage directory made &lt;strong&gt;BEFORE&lt;/strong&gt; the lecture. If time permits, we will cover some of that too.&lt;/p&gt;

&lt;p&gt;Here are the &lt;strong&gt;Official&lt;/strong&gt; instructions on how to make your homepage:
&lt;a href=&quot;http://www.iitk.ac.in/cc/homepage/&quot;&gt;Creating Personal Homepage&lt;/a&gt;. You need to look at the section saying &lt;em&gt;For uploading and downloading and editing (using WinSCP)&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;topics-to-be-covered&quot;&gt;Topics to be covered&lt;/h2&gt;
&lt;p&gt;Here’s a brief description of what this series will attempt to cover, and what those topics are.&lt;/p&gt;

&lt;h3 id=&quot;html&quot;&gt;HTML&lt;/h3&gt;
&lt;p&gt;Say you need to design a poster, how would you go about doing that?&lt;/p&gt;

&lt;p&gt;You begin with a vague idea. Perhaps you want a title, followed by a subtitle. A title image would be good too. Some text in paragraphs, and some more images.&lt;/p&gt;

&lt;p&gt;Note that the things which immediately come to mind describe the structure of the poster. You could later on choose to write things in a pretty font, display images to the right; or even choose to make the font size in the paragraphs larger than the title itself. This all is secondary. What you initially need to know is, what is the structure of the document.&lt;/p&gt;

&lt;p&gt;On the web, that is precisely what HTML does. HTML, (or Hyper Text Markup Language) is a templating language, meaning that it let’s you create a template of what structure you have in mind. Displaying it nicely is a whole other matter, which we will look at later.&lt;/p&gt;

&lt;p&gt;Here are some of the things which are preferably done in HTML, for a web page:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Title of the page (the one which is displayed as the name of the current tab)&lt;/li&gt;
  &lt;li&gt;Information about the web page for browsers&lt;/li&gt;
  &lt;li&gt;The &lt;em&gt;body&lt;/em&gt; of the webpage, which you see.&lt;/li&gt;
  &lt;li&gt;Images in the web page&lt;/li&gt;
  &lt;li&gt;Text in the web page&lt;/li&gt;
  &lt;li&gt;Subdividing text into paragraphs&lt;/li&gt;
  &lt;li&gt;Adding whitespace (newlines, spaces etc)&lt;/li&gt;
  &lt;li&gt;Some simple styling of webpages (not recommended)&lt;/li&gt;
  &lt;li&gt;Add links to other pages&lt;/li&gt;
  &lt;li&gt;Quite more :)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;css&quot;&gt;CSS&lt;/h3&gt;
&lt;p&gt;Now suppose you need to show something in a colored font on your webpage, or you want an image to display on the right side of the webpage instead of the left.&lt;/p&gt;

&lt;p&gt;How do you do that? Thanks to the structured form of HTML, it is possible to label and identify items in your website’s structure (maybe you need to refer to all images, maybe only the images inside a particular paragraph, who knows?). Using this, you can define rules for every particular set of items on your web page.&lt;/p&gt;

&lt;p&gt;HTML and CSS alone form the majority of the visible part of the websites you see. The design of the &lt;code class=&quot;highlighter-rouge&quot;&gt;pclub.in&lt;/code&gt; website, how &lt;code class=&quot;highlighter-rouge&quot;&gt;google.com&lt;/code&gt; looks, Google’s new material design websites; most of the styling is still done in CSS (apart from some complicated, dynamic ones). CSS is what you use to design your websites, make them look pretty (or ugly if you want to), and even add some animations!&lt;/p&gt;

&lt;p&gt;For an example, try navigating to &lt;a href=&quot;http://pclub.in/contact.html&quot;&gt;the ‘contact’ page on pclub.in&lt;/a&gt;. Try hovering your mouse above any of the images, or names of the secretaries. The smooth animation you see was implemented with a few standard lines of CSS :)&lt;/p&gt;

&lt;h3 id=&quot;javascript&quot;&gt;JavaScript&lt;/h3&gt;
&lt;p&gt;You’ve got an idea about how to describe the structure of a document, you even know how to put some style to it. But how do you handle clicks?&lt;/p&gt;

&lt;p&gt;One simple thing is to put links. That could open up a new page. But what if you want the click to, say, change some text on the page? Or maybe you’re making an online game, and you want it to use some buttons. Think YouTube, and how it handles the Play button. How do you describe what should happen when you click something?&lt;/p&gt;

&lt;p&gt;Also, you’ve seen some simple animations. Did you notice the animation for &lt;em&gt;We’re the PClub&lt;/em&gt; on the programming club website homepage? The alphabets appear one by one, after a certain time delay. How do you do that?&lt;/p&gt;

&lt;p&gt;What about Facebook, how does it get more information when you scroll down, and display it on the same page?&lt;/p&gt;

&lt;p&gt;What we’ve described above are actual programming challenges, not just styling and structuring problems. JavaScript is the de-facto language of the internet, and it is what helps us describe all the above actions in a way computers understand. JavaScript is in itself, a full fledged programming language, and you can do quite a bit using it. It is what makes websites responsive. These files have an extension of &lt;code class=&quot;highlighter-rouge&quot;&gt;.js&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;nodejs-and-other-backend-languages-like-php&quot;&gt;Node.js (and other Backend languages like PHP)&lt;/h3&gt;
&lt;p&gt;All you’ve seen till now is what is called the &lt;em&gt;frontend&lt;/em&gt;. Everything was happening on the browser (which is called the &lt;em&gt;client side&lt;/em&gt;). The machine hosting the website (as we mentioned in the very start) only has to send the &lt;code class=&quot;highlighter-rouge&quot;&gt;html&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;css&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;js&lt;/code&gt; files to the browser, which interprets these files. Websites comprising only of that type of items are called static websites. Think of, &lt;a href=&quot;http://example.com&quot;&gt;example.com&lt;/a&gt;, or &lt;a href=&quot;http://cse.iitk.ac.in/index.html&quot;&gt;cse.iitk.ac.in&lt;/a&gt;. These websites have content which changes rarely, and is manually updated by updating the files stored on the host computer (called the &lt;strong&gt;server&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;How about Facebook? People post thousands of images every minute, yet it does not create a separate &lt;code class=&quot;highlighter-rouge&quot;&gt;html&lt;/code&gt; page for everyone every 1 second. In such cases, the server is not only sending static content (&lt;code class=&quot;highlighter-rouge&quot;&gt;html&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;css&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;js&lt;/code&gt;), but is also responding to complex queries. When you log in, you send an &lt;em&gt;HTTP request&lt;/em&gt; (google this term!) to the server, with your password. It then verifies that it is correct, and lets you in. On this, it looks up in its store of information (called the &lt;em&gt;Database&lt;/em&gt;), and generates data to display to you. This is how you get this information. The user’s browser sends more &lt;em&gt;HTTP Requests&lt;/em&gt; to the server, say asking for new items in your news feed. The server responds by providing that information, and the browser takes that information, and JavaScript converts that information into content you can see on your screen.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The above is a (fairly-long) description of the various things necessary to be known to be able to do some serious web development. Don’t worry if you don’t understand parts of it, you’ll come to know eventually, when you cover the topics in more detail. Till then, happy Googling!&lt;/p&gt;
</description>
        <pubDate>Sat, 24 Sep 2016 10:16:12 +0000</pubDate>
        <link>http://pclub.in/lecture/web%20development/2016/09/24/webdev1.html</link>
        <guid isPermaLink="true">http://pclub.in/lecture/web%20development/2016/09/24/webdev1.html</guid>
        
        <category>meta</category>
        
        <category>webd</category>
        
        <category>tutorial</category>
        
        <category>lecture</category>
        
        
        <category>lecture</category>
        
        <category>Web Development</category>
        
      </item>
    
      <item>
        <title>Forex Prediction</title>
        <description>&lt;h1 id=&quot;predicting-foreign-exchange-rates&quot;&gt;PREDICTING FOREIGN EXCHANGE RATES&lt;/h1&gt;

&lt;h3 id=&quot;about-the-project&quot;&gt;About the project&lt;/h3&gt;

&lt;p&gt;The project is designed to predict foreign exchange rates. It takes opening , maximum and minimum price as inputs and learns and create the model from the trainig data and then you can use that model to predict the closing price of foreign exchange. Training data should be large enough (at least 60,000 sets) in order to predict the output precisely. In our project we are testing our model on a validation set and printing the accuracy as final output.&lt;/p&gt;

&lt;h3 id=&quot;what-we-learnt&quot;&gt;What we learnt&lt;/h3&gt;

&lt;p&gt;After completing this project we became well versed with &lt;a href=&quot;https://www.lua.org/about.html&quot;&gt;Lua&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Torch_(machine_learning)&quot;&gt;Torch&lt;/a&gt;. Also, one learns the basic concepts involved in the construction of &lt;a href=&quot;https://en.wikipedia.org/wiki/Artificial_neural_network&quot;&gt;neural networks&lt;/a&gt; and the various machine learning algorithms.&lt;/p&gt;

&lt;h3 id=&quot;how-to-use&quot;&gt;How to use&lt;/h3&gt;

&lt;p&gt;Install torch from &lt;a href=&quot;https://github.com/torch/torch7/wiki/Cheatsheet&quot;&gt;this link&lt;/a&gt;.
Download free forex data from &lt;a href=&quot;http://www.histdata.com/&quot;&gt;here&lt;/a&gt; and convert the csv file into txt file separated by ;.
This data will form your training and validation set. Download the code from &lt;a href=&quot;https://github.com/adjhawar/forex_ml&quot;&gt;here&lt;/a&gt; and run on your system by using &lt;em&gt;th filename&lt;/em&gt;
You will also see a graph plot between the expected value and predicted value.&lt;/p&gt;

&lt;h3 id=&quot;how-does-the-code-work&quot;&gt;How does the code work&lt;/h3&gt;

&lt;p&gt;Well, the program uses gradient descent algorithm and uses a test data set to train itself. This is necessary for the program to learn and this model is saved. Now, this saved model is reloaded in a new program and there it predicts the values for the validation set. Then the actual values and obtained values are obtained on the graph.&lt;/p&gt;
</description>
        <pubDate>Fri, 23 Sep 2016 10:30:00 +0000</pubDate>
        <link>http://pclub.in/project/2016/09/23/Forex.html</link>
        <guid isPermaLink="true">http://pclub.in/project/2016/09/23/Forex.html</guid>
        
        <category>summer16</category>
        
        <category>project</category>
        
        <category>ML</category>
        
        
        <category>project</category>
        
        <category>Project</category>
        
      </item>
    
      <item>
        <title>WiFi Captive Portal with Dashboard</title>
        <description>&lt;h1 id=&quot;wifi-captive-portal-and-administrator-dashboard&quot;&gt;&lt;a href=&quot;https://abhinavtripathi95.github.io/&quot;&gt;WIFI CAPTIVE PORTAL AND ADMINISTRATOR DASHBOARD&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&quot;synopsis&quot;&gt;Synopsis&lt;/h2&gt;
&lt;p&gt;The objective of the project was to create a system for authenticating users for free WiFi and a dashboard for the management of the same.
When the user connects to the WiFi network, the user is prompted to type in his/her mobile number. The system will generate an OTP and the OTP is sent to the user via SMS. The user is prompted to enter the OTP. If the codes match, the user is then given limited access to the internet.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/abhinavtripathi95/abhinavtripathi95.github.io/blob/master/tiltviewer/imgs/w2.jpeg&quot; alt=&quot;image,center&quot; /&gt;
&lt;br /&gt;Wifi Login Portal: Authentication using Mobile Number.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/abhinavtripathi95/abhinavtripathi95.github.io/blob/master/tiltviewer/imgs/2.png&quot; alt=&quot;image,center&quot; /&gt;
&lt;br /&gt;Dashboard showing summary of connected devices.&lt;/p&gt;
&lt;h2 id=&quot;tasks&quot;&gt;Tasks&lt;/h2&gt;
&lt;p&gt;The project had following main tasks to perform:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Configuring the router through Nodogsplash (OpenWrt) for creating a framework for splash screen.&lt;/li&gt;
  &lt;li&gt;Using Google Firebase to store the data as json files on global database.&lt;/li&gt;
  &lt;li&gt;Using Django framework to run a local server.&lt;/li&gt;
  &lt;li&gt;Using Django to link all the data stored into the Dashboard dynamically.&lt;/li&gt;
  &lt;li&gt;Creating Sign-in/ OTP pages and Admin Dashboard using html, Bootstrap CSS and Javascript, Morris Charts, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;dependencies&quot;&gt;Dependencies&lt;/h2&gt;
&lt;h3 id=&quot;router&quot;&gt;Router&lt;/h3&gt;
&lt;p&gt;The router used for the project was running on Openwrt v15.05.1 (Chaos Calmer). The specific build used for the project can be found &lt;a href=&quot;https://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/openwrt-ar71xx-generic-tl-wr740n-v5-squashfs-factory.bin&quot;&gt;here&lt;/a&gt;. The following extra packages were also installed:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://wiki.openwrt.org/doc/howto/wireless.hotspot.nodogsplash&quot;&gt;NodogSplash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;server&quot;&gt;Server&lt;/h3&gt;
&lt;p&gt;The following dependencies are needed to be installed, in order to run the server which handles the authentication of users:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Django v1.9.7&lt;/li&gt;
  &lt;li&gt;BeautifulSoup4&lt;/li&gt;
  &lt;li&gt;requests&lt;/li&gt;
  &lt;li&gt;python-firebase(https://github.com/mikexstudios/python-firebase)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;external-services&quot;&gt;External Services&lt;/h3&gt;
&lt;p&gt;The following external services were also used:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://enterprise.smsgupshup.com/&quot;&gt;Gupshup Enterprise edition&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://firebase.google.com/&quot;&gt;Firebase&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Awarded the &lt;strong&gt;Best Project&lt;/strong&gt; under PClub during SnT Summer Camp ‘16.&lt;/p&gt;

&lt;p&gt;Website: &lt;a href=&quot;https://abhinavtripathi95.github.io/&quot;&gt;https://abhinavtripathi95.github.io/&lt;/a&gt;
Github Link: &lt;a href=&quot;https://github.com/jayaaditya/adurcup-iitk-rc1&quot;&gt;https://github.com/jayaaditya/adurcup-iitk-rc1&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 23 Sep 2016 09:30:00 +0000</pubDate>
        <link>http://pclub.in/project/2016/09/23/wifiDash.html</link>
        <guid isPermaLink="true">http://pclub.in/project/2016/09/23/wifiDash.html</guid>
        
        <category>summer16</category>
        
        <category>project</category>
        
        <category>Web Development</category>
        
        <category>Wifi Portal</category>
        
        <category>Dashboard</category>
        
        
        <category>project</category>
        
        <category>Project</category>
        
      </item>
    
  </channel>
</rss>
