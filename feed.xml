<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming Club IIT Kanpur</title>
    <description>The Programming Club, IIT Kanpur
</description>
    <link>http://pclub.in/</link>
    <atom:link href="http://pclub.in/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 24 Sep 2016 11:13:47 +0000</pubDate>
    <lastBuildDate>Sat, 24 Sep 2016 11:13:47 +0000</lastBuildDate>
    <generator>Jekyll v3.0.2</generator>
    
      <item>
        <title>Forex Prediction</title>
        <description>&lt;h1 id=&quot;predicting-foreign-exchange-rates&quot;&gt;PREDICTING FOREIGN EXCHANGE RATES&lt;/h1&gt;

&lt;h3 id=&quot;about-the-project&quot;&gt;About the project&lt;/h3&gt;

&lt;p&gt;The project is designed to predict foreign exchange rates. It takes opening , maximum and minimum price as inputs and learns and create the model from the trainig data and then you can use that model to predict the closing price of foreign exchange. Training data should be large enough (at least 60,000 sets) in order to predict the output precisely. In our project we are testing our model on a validation set and printing the accuracy as final output.&lt;/p&gt;

&lt;h3 id=&quot;what-we-learnt&quot;&gt;What we learnt&lt;/h3&gt;

&lt;p&gt;After completing this project we became well versed with &lt;a href=&quot;https://www.lua.org/about.html&quot;&gt;Lua&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Torch_(machine_learning)&quot;&gt;Torch&lt;/a&gt;. Also, one learns the basic concepts involved in the construction of &lt;a href=&quot;https://en.wikipedia.org/wiki/Artificial_neural_network&quot;&gt;neural networks&lt;/a&gt; and the various machine learning algorithms.&lt;/p&gt;

&lt;h3 id=&quot;how-to-use&quot;&gt;How to use&lt;/h3&gt;

&lt;p&gt;Install torch from &lt;a href=&quot;https://github.com/torch/torch7/wiki/Cheatsheet&quot;&gt;this link&lt;/a&gt;.
Download free forex data from &lt;a href=&quot;http://www.histdata.com/&quot;&gt;here&lt;/a&gt; and convert the csv file into txt file separated by ;.
This data will form your training and validation set. Download the code from &lt;a href=&quot;https://github.com/adjhawar/forex_ml&quot;&gt;here&lt;/a&gt; and run on your system by using &lt;em&gt;th filename&lt;/em&gt;
You will also see a graph plot between the expected value and predicted value.&lt;/p&gt;

&lt;h3 id=&quot;how-does-the-code-work&quot;&gt;How does the code work&lt;/h3&gt;

&lt;p&gt;Well, the program uses gradient descent algorithm and uses a test data set to train itself. This is necessary for the program to learn and this model is saved. Now, this saved model is reloaded in a new program and there it predicts the values for the validation set. Then the actual values and obtained values are obtained on the graph.&lt;/p&gt;
</description>
        <pubDate>Fri, 23 Sep 2016 10:30:00 +0000</pubDate>
        <link>http://pclub.in/project/2016/09/23/Forex.html</link>
        <guid isPermaLink="true">http://pclub.in/project/2016/09/23/Forex.html</guid>
        
        <category>summer16</category>
        
        <category>project</category>
        
        <category>ML</category>
        
        
        <category>project</category>
        
        <category>Project</category>
        
      </item>
    
      <item>
        <title>Handwriting Recognition By Machine Learning</title>
        <description>&lt;h1 id=&quot;hand-writing-recognition-by-machine-learninghttpsshanugithubiomlhr&quot;&gt;&lt;a href=&quot;http://sshanu.github.io/ml_HR/&quot;&gt;Hand writing Recognition by Machine Learning&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;This project uses Neural Network Modelling  for identification of Handwriting from Optical Images.
Artificial Neural Network is a network inspired by biological neural networks and is one of the most advanced techniques in Artificial Intelligence research.
Our software  can recognize handwritten text from any image by first segmenting the image into segments by using binary logistic regressions and brute force segementation and then applying multi class logistic regression for character recognition on these segments.
Our Neural Network Model  can learn any individual person’s handwriting since it  learns English Alphabets and Hindu Arabic from any labelled data of images.
We trained our model over a data set containing over 65000 data points.
The CNN model used advanced Convolution Neural Network so that it could train even over data points with less dimensions.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/Sshanu/ml_HR/raw/gh-pages/CNNArchitecture.jpg&quot; alt=&quot;image,center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;^ This is a screenshot of our program predicting a character and also show how our network features works.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;iTorch Notebook is used for executing the code.&lt;/li&gt;
  &lt;li&gt;Torch Framework is used for implementing the Neural Network Architecture.&lt;/li&gt;
  &lt;li&gt;This software can be used in varied number of applications such as:&lt;/li&gt;
  &lt;li&gt;Converting paper book libraries into digital libraries.&lt;/li&gt;
  &lt;li&gt;Identifying  an individual’s handwriting in forensic science.&lt;/li&gt;
  &lt;li&gt;Converting text written individual’s handwriting into someone else’s handwriting.&lt;/li&gt;
  &lt;li&gt;Helping blind people to read by converting text to audio.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Received the &lt;strong&gt;Special Mention Award&lt;/strong&gt; during the Science &amp;amp; Technology Summer
Camp 2016.&lt;/p&gt;

&lt;p&gt;Website: &lt;a href=&quot;http://sshanu.github.io/ml_HR/&quot;&gt;http://sshanu.github.io/ml_HR/&lt;/a&gt;
Project Timeline Video: &lt;a href=&quot;https://youtu.be/z7tzr_anlJs&quot;&gt;https://youtu.be/z7tzr_anlJs&lt;/a&gt;
Github Wiki: &lt;a href=&quot;https://github.com/Sshanu/ml_HR/wiki&quot;&gt;Ml_HR Wiki&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 23 Sep 2016 09:30:00 +0000</pubDate>
        <link>http://pclub.in/project/2016/09/23/Ml_HR.html</link>
        <guid isPermaLink="true">http://pclub.in/project/2016/09/23/Ml_HR.html</guid>
        
        <category>summer16</category>
        
        <category>project</category>
        
        
        <category>project</category>
        
        <category>Project</category>
        
      </item>
    
      <item>
        <title>Open Source Software</title>
        <description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Free Libre and open-source software (FLOSS) is computer software that can be classified as both free software and open-source software. That is, anyone is freely licensed to use, copy, study, and change the software in any way, and the source code is openly shared so that people are encouraged to voluntarily improve the design of the software. Free, open-source operating systems such as &lt;a href=&quot;“https://www.gnu.org/gnu/linux-and-gnu.en.html”&quot;&gt;GNU/Linux&lt;/a&gt; are widely utilised today, powering millions of servers, desktops, smartphones (e.g. Android), and other devices.&lt;sup&gt;[1]&lt;sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&quot;history&quot;&gt;History&lt;/h2&gt;

&lt;p&gt;It is common knowledge, from the 1950’s to the 70’s, the common trend for developers and users was to freely share source code with one another, and used to tailor it for their needs.&lt;/p&gt;

&lt;p&gt;However, in the 70’s and early 80’s, the evolving software industry began to directly sell software, which usually was in the form of binary copies, thereby preventing users to reverse engineer the software. In 1980, the copyright law in the States was extended to software programs.&lt;/p&gt;

&lt;p&gt;In 1983, &lt;a href=&quot;“https://stallman.org”&quot;&gt;Richard Stallman&lt;/a&gt; at the MIT AI Laboratory, announced the &lt;em&gt;GNU Project&lt;/em&gt;. Along with the GNU OS development, the &lt;em&gt;Free Software Foundation a.k.a. FSF&lt;/em&gt; was founded in 1985. The &lt;a href=&quot;&amp;quot;https://en.wikipedia.org/wiki/GNU_Manifesto&amp;quot;&quot;&gt;GNU Manifesto&lt;/a&gt; contained the GNU philosophy of Free Software definition and “copyleft” ideas.&lt;/p&gt;

&lt;p&gt;The Linux kernel was released as a freely modifiable open source software in 1991, which was relicensed under the GNU GPL in 1992.
FreeBSD and NetBSD were released as free software in 1993. In 1995, the &lt;a href=&quot;“https://httpd.apache.org”&quot;&gt;Apache Web Server&lt;/a&gt; (A patchy web server, there is sure history behind its name :P) was released.&lt;/p&gt;

&lt;p&gt;Then came a revolutionary moment in 1998. The Netscape Corporation released its famous Netscape Communicator Suite as free software. (I am sure you guys must have heard Firefox and ThunderBird. Yeah, that is the descendant of the Netscape; however, another story, another time).&lt;/p&gt;

&lt;p&gt;Netscape saw business potential in collaborating and sharing source code, however the FSF and its ideals were not not appealing enough to them. Hence, they decided to rebrand the movement; coining the famous “open source” and the &lt;a href=&quot;%22https://opensource.org/%22&quot;&gt;Open Source Initiative&lt;/a&gt; was established in February, 1998. In 2001, the European Commission introduced the term FLOSS, which has been in both popular and official use since 2004.&lt;sup&gt;[2]&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&quot;licensing--an-important-part&quot;&gt;Licensing : An important part&lt;/h2&gt;

&lt;p&gt;Since the establishment of the GNU Project, there have been ideas floating around for an explicit open source license. The GNU General Public License v1.0 was thus released in 1989, with v2.0 coming in 1991.&lt;/p&gt;

&lt;p&gt;Various popular licenses pertaining to Free software, as approved by the OSI are:   &lt;sup&gt;[3]&lt;/sup&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Apache License 2.0&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;BSD 3-Clause “New” or “Revised” license&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;BSD 2-Clause “Simplified” or “FreeBSD” license&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;GNU General Public License (GPL)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;GNU Library or “Lesser” General Public License (LGPL)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MIT license&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Mozilla Public License 2.0&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Common Development and Distribution License&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Eclipse Public License&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Check out these licenses and their full texts at &lt;a href=&quot;&amp;quot;https://opensource.org/licenses”&quot;&gt;the OSI website&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;gnulinux&quot;&gt;GNU/Linux&lt;/h2&gt;

&lt;p&gt;One can’t write an article on FLOSS, and skip out GNU/Linux. There is quite a lot of history surrounding the most popular OSS Linux kernel, and it sure is a favourite amongst developers and the community alike.
There are a lot of Operating systems (referred to as linux distributions) based on the linux kernel, popular ones being&lt;/p&gt;

&lt;h1 id=&quot;ubuntu&quot;&gt;Ubuntu&lt;/h1&gt;
&lt;p&gt;Arguably the largest used linux OS in PCs around the world, it is quite popular amongst the people entering the dynamic world of open source. A clean graphical user interface, with the nix terminal; it provides an easy transition from Windows to Linux. It is based on the Debian distribution. &lt;sup&gt;[4]&lt;/sup&gt;
Check out the &lt;a href=&quot;&amp;quot;https://www.ubuntu.com”&quot;&gt;Ubuntu&lt;/a&gt; website for more details.&lt;/p&gt;

&lt;h1 id=&quot;kali-linux&quot;&gt;Kali Linux&lt;/h1&gt;
&lt;p&gt;Kali Linux is a security testing distro. (Of course, it does have a cool interface :P).&lt;/p&gt;

&lt;h1 id=&quot;elementary-os&quot;&gt;Elementary OS&lt;/h1&gt;
&lt;p&gt;Elementary OS is a distribution based on Ubuntu, and borrows its looks from the Mac OS X.&lt;/p&gt;

&lt;h1 id=&quot;gentoo-linux&quot;&gt;Gentoo Linux&lt;/h1&gt;
&lt;p&gt;Gentoo is a distribution which, in my opinion, stands apart from others in the list. It is an OS, which you actually have to compile and install. Honestly speaking, I never had the chance to compile and install it myself, but I have seen people do it, and mind you; I have not come across an operating system so configurable during installation. For the record, I’ve heard it is fun using and installing. Do check out the &lt;a href=&quot;&amp;quot;https://www.gentoo.org”&quot;&gt;Gentoo&lt;/a&gt; website.
I would not recommend this operating system to users new to the Linux environment; but after all, we stumble when we learn to walk.&lt;/p&gt;

&lt;h1 id=&quot;arch-linux&quot;&gt;Arch Linux&lt;/h1&gt;
&lt;p&gt;The aim of Arch Linux is to Keep It Simple Stupid. Historically, Arch was sometimes described as “Linux, with a nice package manager.” Arch does not aim to be your friendly, caring operating system; which would do stuff for you. Instead, it is very customisable and favours architectural simplicity and avoids over-engineering. &lt;sup&gt;[5]&lt;/sup&gt;&lt;/p&gt;

&lt;h1 id=&quot;apricityos&quot;&gt;ApricityOS&lt;/h1&gt;
&lt;p&gt;Another linux distribution with great aesthetics. It is based on the Arch Linux OS, and uses GNOME or Cinnamon as the Graphical User Interface.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Credits:&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;“https://en.wikipedia.org/wiki/Free_and_open-source_software”&quot;&gt;https://en.wikipedia.org/wiki/Free_and_open-source_software&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;“https://en.wikipedia.org/wiki/Free_and_open-source_software#History”&quot;&gt;https://en.wikipedia.org/wiki/Free_and_open-source_software#History&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;“https://opensource.org/licenses”&quot;&gt;https://opensource.org/licenses&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;“http://www.ubuntu.com/about/about-ubuntu/ubuntu-and-debian”&quot;&gt;http://www.ubuntu.com/about/about-ubuntu/ubuntu-and-debian&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;“https://wiki.archlinux.org/index.php/arch_compared_to_other_distributions”&quot;&gt;https://wiki.archlinux.org/index.php/arch_compared_to_other_distributions&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 27 Aug 2016 11:28:30 +0000</pubDate>
        <link>http://pclub.in/open%20source/2016/08/27/floss.html</link>
        <guid isPermaLink="true">http://pclub.in/open%20source/2016/08/27/floss.html</guid>
        
        <category>open source</category>
        
        <category>linux</category>
        
        
        <category>Open Source</category>
        
      </item>
    
      <item>
        <title>N-Body Simulation</title>
        <description>&lt;h1 id=&quot;n-body-simulationhttpsagnikbgithubiosimulati-on&quot;&gt;&lt;a href=&quot;http://sagnikb.github.io/Simulati-ON/&quot;&gt;N-body simulation&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;The N-body simulation is an interesting topic in Physics, and finds applications in astrophysics, biomoecular studies and other areas of science. Mathematical soultions of this problem are not possible, so numerical methods are necessary for visualisation. The problem basically involves several bodies with defined properties and also a well defined force that acts between each of these bodies, and involves studying how the system evolves with time. Parallel programming is used for increasing performance, and problems of this type are ideally suited for the parallel programming paradigm.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://raw.githubusercontent.com/sagnikb/Simulati-ON/master/Pics/simulation_sample.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;^ This is a screenshot of a simulation in action with 5 bodies. The program works well with 20 bodies.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OpenACC is used for parallel programming&lt;/li&gt;
  &lt;li&gt;Gnuplot is used for visulisation of data&lt;/li&gt;
  &lt;li&gt;Performance improvement over sequential code easily apparent&lt;/li&gt;
  &lt;li&gt;Uses compiler pgcc. For testing of non parallel programs, the files can also be compiled using gcc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Received the &lt;strong&gt;Best Research Project&lt;/strong&gt; during the Science &amp;amp; Technology Summer
Camp 2016.&lt;/p&gt;

&lt;p&gt;Website: &lt;a href=&quot;http://sagnikb.github.io/Simulati-ON/&quot;&gt;http://sagnikb.github.io/Simulati-ON/&lt;/a&gt;
LaTeX Report: &lt;a href=&quot;http://github.com/sagnikb/documentation/report.pdf&quot;&gt;report.pdf&lt;/a&gt;
Github Wiki: &lt;a href=&quot;https://github.com/sagnikb/Simulati-ON/wiki&quot;&gt;Simulati-ON Wiki&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Aug 2016 19:30:00 +0000</pubDate>
        <link>http://pclub.in/project/2016/08/26/nbodysimulation.html</link>
        <guid isPermaLink="true">http://pclub.in/project/2016/08/26/nbodysimulation.html</guid>
        
        <category>summer16</category>
        
        <category>project</category>
        
        
        <category>project</category>
        
        <category>Project</category>
        
      </item>
    
      <item>
        <title>Dynamic Programming Optimization with Convex Hull Trick</title>
        <description>&lt;h2 id=&quot;dynamic-programming-optimisation-with--convex-hull-trick-&quot;&gt;Dynamic Programming Optimisation with  Convex Hull Trick :&lt;/h2&gt;

&lt;h4 id=&quot;why-dynamic-programming&quot;&gt;Why Dynamic programming?&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Dynamic programming is a very useful method for solving a particular class of problems in which the problem is broken into smaller sub-problems and the optimal solution of sub-problems contribute towards the optimal solution of given problem.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you are new to Dynamic Programming you can read a good tutorial here:
&lt;a href=&quot;https://www.topcoder.com/community/data-science/data-science-tutorials/dynamic-programming-from-novice-to-advanced/&quot;&gt;link1&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Most of the problems solved by DP(dynamic programming) seem to be of brute force type, but you can identify them by observing the repetative calculation of sub-problems and by formulating a recursive relationship to get the optimal soution.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;whats-a-convex-hull-trick&quot;&gt;What’s a Convex Hull Trick?&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Although it seems to be related to the &lt;strong&gt;Convex Hull Algorithm&lt;/strong&gt; from its name, but it’s not. It is a “trick”, as its name suggests, in which from a set of linear function, the function which attains the extreme value for an independent variable is obtained effeciently by some preprocessing. Only because the soultion looks like an open convex polygon it is known as “Convex Hull Trick”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;For simple understanding, consider &lt;strong&gt;N&lt;/strong&gt; lines of the form:&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;y=m&lt;sub&gt;i&lt;/sub&gt;x+c&lt;sub&gt;i&lt;/sub&gt;&lt;/strong&gt; , ∀ i ∈[1,&lt;strong&gt;N&lt;/strong&gt;]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The problem is to find the line with extremum value of y for a particular value of x.
Let’s consider finding the minimum value of y.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://www.cs.wustl.edu/~pless/506/f8_3.gif&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;From the figure you can see that the parts of lines marked as &lt;em&gt;lower envelope&lt;/em&gt; gives us the required solution.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Few simple observations that can be made are :&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;A part of line can be the solution for a &lt;strong&gt;continuous range&lt;/strong&gt; of &lt;strong&gt;x&lt;/strong&gt;.&lt;/li&gt;
      &lt;li&gt;As &lt;strong&gt;x&lt;/strong&gt; increases, the slope of the required line keeps on decreasing and these parts of lines form an open convex hull.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;So, if you are given the set of lines initially, the you can sort the lines with decresasing value of slope and add then build the solution based on their point of intersection.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://img1.mnimgs.com/img/shared/userimages/mn_images/image/Tr1.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To build the solution you should discard the lines that can’t be a part of the solution. As you can see the above image, the slopes of lines are such that :&lt;/p&gt;

    &lt;p&gt;m&lt;sub&gt;m&lt;/sub&gt; &amp;gt; m&lt;sub&gt;l&lt;/sub&gt; &amp;gt; m&lt;sub&gt;n&lt;/sub&gt;&lt;/p&gt;

    &lt;p&gt;First, consider you have only lines &lt;strong&gt;m&lt;/strong&gt; &amp;amp; &lt;strong&gt;l&lt;/strong&gt;. Then, add the line n to the set of line. Here, you can see that the x-co-ordinate of point &lt;strong&gt;C&lt;/strong&gt; is less than the x-co-ordinate of point &lt;strong&gt;A&lt;/strong&gt;. Hence, the line &lt;strong&gt;n&lt;/strong&gt; attains minimum value even before the line &lt;strong&gt;l&lt;/strong&gt;. From this you can see that the line &lt;strong&gt;l&lt;/strong&gt; can be discarded from the solution set.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;After discarding all such unnecessary lines, you can maintain the lines with decresing slope and the x-co-ordinate of its point of intersection with its previous line. (Observe that these x-co-ordinates will be in increasing order).&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;For the query, you can do &lt;strong&gt;binary search&lt;/strong&gt; on the x-co-ordinate  of point of intersections and and get the line with the minimum value of &lt;strong&gt;y&lt;/strong&gt; effeciently in &lt;strong&gt;Ο&lt;/strong&gt;(log&lt;strong&gt;N&lt;/strong&gt;), where &lt;strong&gt;N&lt;/strong&gt; is number of lines.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;PreProcessing time: &lt;strong&gt;Ο&lt;/strong&gt;(&lt;strong&gt;N&lt;/strong&gt;log&lt;strong&gt;N&lt;/strong&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;There is also a fully &lt;strong&gt;dynamic variant&lt;/strong&gt; of this Convex Hull Trick in which the lines are added during the query time. For this a data structure like &lt;a href=&quot;https://www.topcoder.com/community/data-science/data-science-tutorials/power-up-c-with-the-standard-template-library-part-1/#set&quot;&gt;&lt;strong&gt;set&lt;/strong&gt;&lt;/a&gt; can be used which maintain the sorted list of slopes of lines dynamically. The only difference is after each insertion of a new line(insertion of slope) into set, we check its intersection with its neighbouring elements in &lt;strong&gt;set&lt;/strong&gt; and decide wheathter to discard it or not using the same condition as stated above. We should also check if any line already present in the set is discarded after the insertion of the line.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;You can also try solving this problem &lt;a href=&quot;https://www.codechef.com/JAN16/problems/CYCLRACE/&quot;&gt;here&lt;/a&gt;, which is based on direct implementation of its dynamic variant.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;how-can-you-optimise-dp-with-convex-hull-trick&quot;&gt;How can you optimise DP with Convex Hull Trick?&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;In some specific problems that can be solved by &lt;strong&gt;Dynamic Programming&lt;/strong&gt; we can do faster calculation of the state using the Convex Hull Trick. In these type of problems, the recursive relation between the states is as follows:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;dp&lt;sub&gt;i&lt;/sub&gt; = min(b&lt;sub&gt;j&lt;/sub&gt;*a&lt;sub&gt;i&lt;/sub&gt; + dp&lt;sub&gt;j&lt;/sub&gt;)&lt;/strong&gt; ,where j ∈ [1,i-1]&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;b&lt;sub&gt;i&lt;/sub&gt;&lt;/strong&gt; &amp;gt; &lt;strong&gt;b&lt;sub&gt;j&lt;/sub&gt;&lt;/strong&gt; ,∀ i&amp;lt;j.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Our task is to calculate &lt;strong&gt;dp&lt;sub&gt;N&lt;/sub&gt;&lt;/strong&gt; from this relation. Here &lt;strong&gt;b&lt;sub&gt;i&lt;/sub&gt;&lt;/strong&gt; and &lt;strong&gt;dp&lt;sub&gt;i&lt;/sub&gt;&lt;/strong&gt; can be analogously interpreted as the &lt;strong&gt;slope&lt;/strong&gt; and &lt;strong&gt;y-intercept&lt;/strong&gt; for a line, and our problem of calculating the i’th state can be viewed as finding the minimum value of a line for x-co-ordinate &lt;strong&gt;a&lt;sub&gt;i&lt;/sub&gt;&lt;/strong&gt;,which can be effeciently done using the convex hull trick.
The slopes of the are given in the decreasing order here, so after calculating &lt;strong&gt;dp&lt;sub&gt;i&lt;/sub&gt;&lt;/strong&gt; we can add a line with slope &lt;strong&gt;b&lt;sub&gt;i&lt;/sub&gt;&lt;/strong&gt; and y-intercept &lt;strong&gt;dp&lt;sub&gt;i&lt;/sub&gt;&lt;/strong&gt; directly to the right of the sorted list maintained for calculating further states.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the above problem if we directly calculate &lt;strong&gt;dp&lt;sub&gt;i&lt;/sub&gt;&lt;/strong&gt; by taking i-1 steps for each i, the the time complexity turns out to be &lt;strong&gt;Ο&lt;/strong&gt;(&lt;strong&gt;N&lt;sup&gt;2&lt;/sup&gt;&lt;/strong&gt;), but by using this optimisation technique we can calculate each state in &lt;strong&gt;Ο&lt;/strong&gt;(log&lt;strong&gt;N&lt;/strong&gt;) and the total complexity of the problem reduces to &lt;strong&gt;Ο&lt;/strong&gt;(&lt;strong&gt;N&lt;/strong&gt;log&lt;strong&gt;N&lt;/strong&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;This problem can also be more constrained by a condition:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;a&lt;sub&gt;i&lt;/sub&gt;&lt;/strong&gt; &amp;lt; &lt;strong&gt;a&lt;sub&gt;j&lt;/sub&gt;&lt;/strong&gt;, ∀ i&amp;lt;j.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;In this case, as we know that the x-co-ordinates are in increasing order, we can just maintain a pointer to the line giving minimunm value and then update the pointer to the next line according to the query. Here the steps taken for binary search are replaced by some amortised constant steps to update the pointer to the next lines(decreasing slope order). So, the calculation of each
state takes time &lt;strong&gt;Ο&lt;/strong&gt;(&lt;strong&gt;1&lt;/strong&gt;) and the total time complexity reduces to &lt;strong&gt;Ο&lt;/strong&gt;(&lt;strong&gt;N&lt;/strong&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If there if no constraints given for &lt;strong&gt;a&lt;sub&gt;i&lt;/sub&gt;&lt;/strong&gt; and &lt;strong&gt;b&lt;sub&gt;i&lt;/sub&gt;&lt;/strong&gt;, then you can relate the problem with the dynamic variant of Convex Hull Trick. For this problem, we use the data structure &lt;strong&gt;set&lt;/strong&gt; that maintains the lines in decreasing order of slopes along with dynamic insertions. Each insertion of line into &lt;strong&gt;set&lt;/strong&gt; takes time &lt;strong&gt;Ο&lt;/strong&gt;(log&lt;strong&gt;N&lt;/strong&gt;) and calculation of each state takes time &lt;strong&gt;Ο&lt;/strong&gt;(log&lt;strong&gt;N&lt;/strong&gt;). So, the total time complexity will be &lt;strong&gt;Ο&lt;/strong&gt;(&lt;strong&gt;N&lt;/strong&gt;log&lt;strong&gt;N&lt;/strong&gt;). You should be &lt;strong&gt;cautious&lt;/strong&gt; in using &lt;strong&gt;set&lt;/strong&gt; when you are given a constraint  for &lt;strong&gt;b&lt;sub&gt;i&lt;/sub&gt;&lt;/strong&gt; because even though by both ways you get &lt;strong&gt;Ο&lt;/strong&gt;(&lt;strong&gt;N&lt;/strong&gt;log&lt;strong&gt;N&lt;/strong&gt;), &lt;strong&gt;set&lt;/strong&gt; has a high proportionality time constant.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;You can try solving some problems here :
 &lt;a href=&quot;http://codeforces.com/contest/536/problem/C&quot;&gt;link1&lt;/a&gt;
 &lt;a href=&quot;http://codeforces.com/contest/319/problem/C&quot;&gt;link2&lt;/a&gt;
 &lt;a href=&quot;http://www.spoj.com/problems/NKLEAVES/en/&quot;&gt;link3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Here’s an image just for fun :)
&lt;a href=&quot;https://cdn.meme.am/instances/500x/54146722.jpg&quot;&gt;img&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;………………………………………&lt;/p&gt;
</description>
        <pubDate>Mon, 22 Aug 2016 20:45:00 +0000</pubDate>
        <link>http://pclub.in/tutorial/algos/2016/08/22/dpconvex.html</link>
        <guid isPermaLink="true">http://pclub.in/tutorial/algos/2016/08/22/dpconvex.html</guid>
        
        <category>tutorial</category>
        
        <category>Dynamic Programming</category>
        
        <category>competitive</category>
        
        
        <category>tutorial</category>
        
        <category>Algos</category>
        
      </item>
    
      <item>
        <title>Practice Programming Contest, Summer 2016</title>
        <description>&lt;h1 id=&quot;contest-summary-summer-2016&quot;&gt;Contest Summary: Summer 2016&lt;/h1&gt;

&lt;p&gt;This summer, Programming Club IIT Kanpur kicked off the 2016-17 season, with a Summer WPC
held on the Hackerearth platform. The primary problem setter and tester was
&lt;a href=&quot;http://codeforces.com/profile/ajs97&quot;&gt;Arjun Sinha&lt;/a&gt;, a student of the Y15 batch.
There was an amazing amount of participation, both from within and outside the IITK campus.
The contest was very well received by all those who participatd. Here are some of the contest statistics:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Duration: 6:00 pm 28&lt;sup&gt;th&lt;/sup&gt; June, 2016 IST - 7:00pm 29&lt;sup&gt;th&lt;/sup&gt; June, 2016 IST&lt;/li&gt;
  &lt;li&gt;Number of registered participants: 1301&lt;/li&gt;
  &lt;li&gt;Number of participants with atleast one submission:507&lt;/li&gt;
  &lt;li&gt;Problem with most number of submissions: &lt;strong&gt;Weird Chemists&lt;/strong&gt; :&lt;em&gt;464 correct submissions&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Problem with the least number of submissions: &lt;strong&gt;Tree Tank&lt;/strong&gt; :&lt;em&gt;10 correct submissions&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now for the contest ranks-
1. &lt;strong&gt;Mohib Manva&lt;/strong&gt;, of DAIICT Gandhinagar
2. &lt;strong&gt;Satyaki Upadhyay&lt;/strong&gt;, of BITS Pilani, Pilani Campus
3. &lt;strong&gt;Swastik Sharma&lt;/strong&gt;, of IIT Kanpur&lt;/p&gt;

&lt;p&gt;The three winners solved all the 12 problems in the contest. Congratulations to winners!&lt;/p&gt;

&lt;p&gt;In conclusion, we at PClub were more than happy with the participation and peformance of the contestants.
The problem gradient was good, with the easy problems being solved by a large fraction of contestants,
along with submissions decreasing gradually on the medium and hard problems.&lt;/p&gt;

&lt;p&gt;Here are the problems links for you to read:
(Note: You must be logged into HackerEarth to be able to view these links)&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hackerearth.com/IITK-WPC-Summer16/algorithm/weird-chemists-3/&quot;&gt;&lt;strong&gt;Weird Chemists&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hackerearth.com/IITK-WPC-Summer16/algorithm/alternating-sequences-3/&quot;&gt;&lt;strong&gt;Alternating Sequences&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hackerearth.com/IITK-WPC-Summer16/algorithm/om-nom-and-candies/&quot;&gt;&lt;strong&gt;Om Nom and Candies&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hackerearth.com/IITK-WPC-Summer16/algorithm/andrew-and-his-bike-3/&quot;&gt;&lt;strong&gt;Andrew and His Bike&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hackerearth.com/IITK-WPC-Summer16/algorithm/horn-ok-please/&quot;&gt;&lt;strong&gt;Horn Ok Please&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hackerearth.com/IITK-WPC-Summer16/algorithm/inverted-gcd/&quot;&gt;&lt;strong&gt;Inverted GCD&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hackerearth.com/IITK-WPC-Summer16/algorithm/lizzys-queries/&quot;&gt;&lt;strong&gt;Lizzy’s Queries&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hackerearth.com/IITK-WPC-Summer16/algorithm/monochrome-tree/&quot;&gt;&lt;strong&gt;Monochrome Tree&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hackerearth.com/IITK-WPC-Summer16/algorithm/rendezvous-3/&quot;&gt;&lt;strong&gt;Rendezvous&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hackerearth.com/IITK-WPC-Summer16/algorithm/tree-tank/&quot;&gt;&lt;strong&gt;Tree Tank&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hackerearth.com/IITK-WPC-Summer16/algorithm/miranda-writes/&quot;&gt;&lt;strong&gt;Miranda Writes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hackerearth.com/IITK-WPC-Summer16/algorithm/find-the-triangle-3/&quot;&gt;&lt;strong&gt;Find The Triangle&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you want to submit solutions to the problems, you can submit them in the links given above.
Here is the &lt;a href=&quot;https://www.hackerearth.com/IITK-WPC-Summer16/&quot;&gt;link&lt;/a&gt; of the contest for your reference.
We look forward further WPCs being held this year.&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;
</description>
        <pubDate>Sat, 13 Aug 2016 18:55:00 +0000</pubDate>
        <link>http://pclub.in/competitive/2016/08/13/SummerContestReport.html</link>
        <guid isPermaLink="true">http://pclub.in/competitive/2016/08/13/SummerContestReport.html</guid>
        
        <category>competitive</category>
        
        <category>WPC</category>
        
        
        <category>competitive</category>
        
      </item>
    
      <item>
        <title>Introductory Workshop 2016</title>
        <description>&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Hi all, welcome to the Programming Club Introductory Workshop 2016!&lt;/p&gt;

&lt;h2 id=&quot;terminal&quot;&gt;Terminal&lt;/h2&gt;
&lt;p&gt;Try opening Terminal (sometimes known as Command Line) from the top-left menus. You should find it in the ‘System’ applications.&lt;/p&gt;

&lt;p&gt;Mind it, some operating systems like Ubuntu might have a shortcut for this, you can open it using &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl+Alt+T&lt;/code&gt;, but &lt;em&gt;not&lt;/em&gt; in the CC machines.&lt;/p&gt;

&lt;p&gt;This is where you should learn to do all stuff related to programming, since this gives you &lt;em&gt;unfathomable&lt;/em&gt; power.&lt;/p&gt;

&lt;h2 id=&quot;directory-structure&quot;&gt;Directory structure&lt;/h2&gt;
&lt;p&gt;Linux organizes files and folders in the following way:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Files are kept inside folders&lt;/li&gt;
  &lt;li&gt;You can enter and exit folders just like in Windows&lt;/li&gt;
  &lt;li&gt;Folders are named in the following way: &lt;code class=&quot;highlighter-rouge&quot;&gt;/path-to-folder/folder-name&lt;/code&gt;. This is what completely describes a folder (or a file).&lt;/li&gt;
  &lt;li&gt;We will be using the word &lt;code class=&quot;highlighter-rouge&quot;&gt;directory&lt;/code&gt; for folders. Please note this.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To play around with this, try to use the following commands:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Command&lt;/td&gt;
      &lt;td&gt;Full form&lt;/td&gt;
      &lt;td&gt;Description&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ls&lt;/td&gt;
      &lt;td&gt;list screen&lt;/td&gt;
      &lt;td&gt;List all the files and folders in current directory&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cd&lt;/td&gt;
      &lt;td&gt;change directory&lt;/td&gt;
      &lt;td&gt;Enter a folder whose path is known&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;pwd&lt;/td&gt;
      &lt;td&gt;present working directory&lt;/td&gt;
      &lt;td&gt;Full name of the current folder you are in&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;~&lt;/td&gt;
      &lt;td&gt;tilde&lt;/td&gt;
      &lt;td&gt;Short form for your home folder&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl+c&lt;/code&gt;(keyboard)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Exit/Cancel the current command&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;exit&lt;/td&gt;
      &lt;td&gt;Exit&lt;/td&gt;
      &lt;td&gt;Exit the terminal&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;gedit&quot;&gt;Gedit&lt;/h2&gt;
&lt;p&gt;We will be using &lt;code class=&quot;highlighter-rouge&quot;&gt;gedit&lt;/code&gt; to write your programs. Find it from the applications menu and open it. Don’t be scared, it’s very much like &lt;code class=&quot;highlighter-rouge&quot;&gt;notepad&lt;/code&gt; from Windows.&lt;/p&gt;

&lt;h1 id=&quot;python&quot;&gt;Python&lt;/h1&gt;

&lt;p&gt;Try running &lt;code class=&quot;highlighter-rouge&quot;&gt;python&lt;/code&gt; command in the terminal. You should see something like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Python 2.7.10 (default, Jul  6 2016, 22:05:31) 
[GCC 4.9.3] on linux2
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&amp;gt;&amp;gt;&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; is the place where you type. Try typing the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;2+2&lt;/li&gt;
  &lt;li&gt;print “hello world!”&lt;/li&gt;
  &lt;li&gt;print a (you should get an error)&lt;/li&gt;
  &lt;li&gt;a = 4&lt;/li&gt;
  &lt;li&gt;print a*2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You used an &lt;em&gt;operator&lt;/em&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;a*2&lt;/code&gt; - the multiplication operator. Other operators you need to try out are:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;+&lt;/td&gt;
      &lt;td&gt;Addition&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;Subtraction&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;*&lt;/td&gt;
      &lt;td&gt;Multiplication&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/&lt;/td&gt;
      &lt;td&gt;Division&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;**&lt;/td&gt;
      &lt;td&gt;To the power of&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;ifelse&quot;&gt;If/Else&lt;/h2&gt;

&lt;p&gt;Now that you know how to write simple things, let’s proceed to something interesting.&lt;/p&gt;

&lt;p&gt;Python reads spaces and tabs in your program as well. So for writing a complicated instruction for the computer, we will need to use multiple lines. We will &lt;code class=&quot;highlighter-rouge&quot;&gt;indent&lt;/code&gt; the lines in such a way that the computer can understand that they are meant to be read together.&lt;/p&gt;

&lt;p&gt;Try the following:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a is not zero&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a is zero&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That’s it! See?&lt;/p&gt;

&lt;p&gt;Sometimes one condition isn’t enough though. In that case, you are allowed to chain up multiple conditions using &lt;code class=&quot;highlighter-rouge&quot;&gt;and&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;or&lt;/code&gt; like so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Condition successful&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;condition failed&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That’s all good, but what if you want multiple checks on a variable? For example, let’s say you want to do Action 1 if &lt;code class=&quot;highlighter-rouge&quot;&gt;a&amp;lt;10&lt;/code&gt; and Action 2 if &lt;code class=&quot;highlighter-rouge&quot;&gt;a=10&lt;/code&gt; and Action 3 when &lt;code class=&quot;highlighter-rouge&quot;&gt;a&amp;gt;10&lt;/code&gt;, what then? This is where &lt;code class=&quot;highlighter-rouge&quot;&gt;if-elif-elif-elif-...-else&lt;/code&gt; construct comes into the picture. Use it like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a is less than 0&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a is between 0 and 4&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a is between 4 and 10&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a is bigger than 10&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;loops&quot;&gt;Loops&lt;/h2&gt;

&lt;p&gt;Now for some loopy-loops!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;reading-input&quot;&gt;Reading input&lt;/h2&gt;
&lt;p&gt;You can read input from the user using something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;raw_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello mr. &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;raw_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;See what happens there?&lt;/p&gt;

&lt;h1 id=&quot;codechef&quot;&gt;CodeChef!&lt;/h1&gt;
&lt;p&gt;Try this link &lt;a href=&quot;https://www.codechef.com/problems/TEST&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Can you solve this problem? Try writing a program for this! Please give it a try before you scroll down.&lt;/p&gt;

&lt;p&gt;It’s quite small! Here’s the solution!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;raw_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So you should now &lt;strong&gt;certainly&lt;/strong&gt; create an account on CodeChef! Try submitting the solution there (don’t forget to select Python when you submit). Happy coding!&lt;/p&gt;

&lt;h1 id=&quot;c&quot;&gt;C&lt;/h1&gt;

&lt;p&gt;Create a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;hello.c&lt;/code&gt; with the following content:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello World&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;compiling&quot;&gt;Compiling&lt;/h2&gt;

&lt;p&gt;To actually run the code, execute the following command on the terminal:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gcc -o hello hello.c
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above command tells the computer to create an executable called &lt;code class=&quot;highlighter-rouge&quot;&gt;hello&lt;/code&gt; (The part after &lt;code class=&quot;highlighter-rouge&quot;&gt;-o&lt;/code&gt;) using the code from the file &lt;code class=&quot;highlighter-rouge&quot;&gt;hello.c&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now to run the executable, type:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./hello
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;in the terminal.&lt;/p&gt;

&lt;h1 id=&quot;follow-up&quot;&gt;Follow up&lt;/h1&gt;

&lt;p&gt;Congrats on finishing up to here! If you’re now pumped up for trying out some more challenges, try your hand at the following problems:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codechef.com/problems/HS08TEST&quot;&gt;ATM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codechef.com/problems/FCTRL&quot;&gt;Factorial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codechef.com/problems/INTEST&quot;&gt;Enormous Input Test&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codechef.com/problems/TLG&quot;&gt;The Lead Game&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt; C/C++/Java is the preferred language while participating in competitive contests, as ACM ICPC does not allow Python.&lt;/p&gt;
</description>
        <pubDate>Sat, 13 Aug 2016 04:55:00 +0000</pubDate>
        <link>http://pclub.in/pclub/2016/08/13/introworkshop16.html</link>
        <guid isPermaLink="true">http://pclub.in/pclub/2016/08/13/introworkshop16.html</guid>
        
        <category>pclub</category>
        
        
        <category>pclub</category>
        
      </item>
    
      <item>
        <title>HTML5 Game Development</title>
        <description>&lt;h1 id=&quot;html5-game-development&quot;&gt;HTML5 Game Development&lt;/h1&gt;
&lt;p&gt;For all those gaming nerds out there, there isn’t a better way to develop your gaming skills but to start from scratch of how a game works and to build your own one!
HTML 5 provides rich environment to create your games using Javascript and the html5 canvas object.&lt;/p&gt;

&lt;h3 id=&quot;pre-requisites&quot;&gt;PRE-REQUISITES&lt;/h3&gt;
&lt;p&gt;Well all you need is to know the basics of html and javascript. And of course a little bit of enthu in the pot is forever welcomed !  :)&lt;/p&gt;

&lt;h3 id=&quot;why-not-other-game-engines-&quot;&gt;WHY NOT OTHER GAME-ENGINES ?&lt;/h3&gt;
&lt;p&gt;We have hundreds of cool game engines in the market, to name few unity,unreal engine, cryengine, source 2 etc. But here we focus on learning things from the scratch, in engines like these things are more  drag and drop and the essence of how things work from the basic fails to deliver. In this article we discuss things from the very basic !&lt;/p&gt;

&lt;h3 id=&quot;game-canvas-and-game-components&quot;&gt;GAME CANVAS AND GAME COMPONENTS&lt;/h3&gt;
&lt;p&gt;Without much ado, we talk about the canvas object in the html 5 that offers to us the work place for doing all our cool gaming stuffs. To note is that it is a container to hold the graphics content and nothing more. Everything that needs to be done must be defined beforehand unlike the game engines like unity which have predefined objects like planes, spheres etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Game Components&lt;/strong&gt;
We can draw rectangles, circles, lines using the 2D context of canvas object (in layman’s term - drawing in the canvas holder by using its 2 Dimensional object ).We can provide colors to fill, or use gradient colors, or even load images to make animations in the 2d context of canvas object.&lt;/p&gt;

&lt;p&gt;Reference Code in js-&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;canvas&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2D&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;red&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This creates a color filled red rectangle in the canvas at (10,20) coordinates of 30px as width and 40px as height.&lt;/p&gt;

&lt;h3 id=&quot;game-components-and-their-movement&quot;&gt;GAME COMPONENTS AND THEIR MOVEMENT&lt;/h3&gt;
&lt;p&gt;The importance of these objects is that they can be moved inside the canvas by redrawing them to different positions, this being done per frame ! A separate function is created which helps in drawing the components taking the position as arguments that is called many times a second to update the position of the game components.The position can incremented each time adding a constant or a uniformly increasing function to make the component move uniformly or accelerate respectively.
The movement is triggered also by adding event handlers through javascript, like “keydown”, “keyup” for keyboard keys, which then can be recognised using the keyCode attribute of the event argument of event -handler function call (see attached reference code).&lt;/p&gt;

&lt;p&gt;Reference Code in js-&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;keydown&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;myGameArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keyCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//for calling a function callMe at 50 every milliseconds (or&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//better say 20 frames per second)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//setInterval(callMe,50);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Hence by knowing which key is pressed we can call the required functions for action to be taken.&lt;/p&gt;

&lt;h3 id=&quot;game-obstacles-and-score&quot;&gt;GAME OBSTACLES AND SCORE&lt;/h3&gt;
&lt;p&gt;Like other game components game obstacles are also game components but being generated at random coordinates of random shape, the code of which is much the same and i leave it to you :) .
The score in most of the cases is decided by certain collision events or by the current frame from the beginning of the game.
Its very easy to ascertain the collision between objects exploiting the again the boundary coordinates, and the current frame can be known by ensuring a  counter that is incremented for the function that is called per frame.I leave the job for you to google out the way to write text in canvas element to display the score when needed.&lt;/p&gt;

&lt;h3 id=&quot;almost-there-&quot;&gt;ALMOST THERE !&lt;/h3&gt;
&lt;p&gt;We  have known  everything to create our first simple html5 game with our own game arena and game components, game obstacles and score to compete !&lt;/p&gt;

&lt;h3 id=&quot;lonely-without-sounds-&quot;&gt;LONELY WITHOUT SOUNDS ?&lt;/h3&gt;
&lt;p&gt;Well everyone loves the charm when there’s music in the air ! Luckily we can have it too in case of html5 “audio” object . Not going into much detail, we can add sound using the following sample code link, which i leave you to dissect.&lt;/p&gt;

&lt;h3 id=&quot;links-and-further-reading&quot;&gt;LINKS AND FURTHER READING&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://home.iitk.ac.in/~akashdut/sounddev.txt&quot;&gt;Adding sounds&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.udacity.com/course/html5-game-development--cs255&quot;&gt;Udacity course on html5 game dev&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.udacity.com/course/html5-canvas--ud292&quot;&gt;Udacity course on html5 canvas element&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.w3schools.com/games/default.asp&quot;&gt;W3schools tutorial for html game&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 27 Jul 2016 10:35:20 +0000</pubDate>
        <link>http://pclub.in/tutorial/game%20dev/2016/07/27/html5gamedev.html</link>
        <guid isPermaLink="true">http://pclub.in/tutorial/game%20dev/2016/07/27/html5gamedev.html</guid>
        
        <category>tutorial</category>
        
        <category>game dev</category>
        
        <category>html5</category>
        
        
        <category>tutorial</category>
        
        <category>Game Dev</category>
        
      </item>
    
      <item>
        <title>Smart Mirror</title>
        <description>&lt;h1 id=&quot;smart-mirrorhttp11000011githubiosmart-mirror&quot;&gt;&lt;a href=&quot;http://11000011.github.io/Smart-Mirror/&quot;&gt;Smart Mirror&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Smart Mirror is a project designed to get you ready for the day. It displays
the current weather, your schedule for the day, notifications from your mobile
and performs facial recognition so that the same software works for all users
using the mirror.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/11000011/Smart-Mirror/raw/gh-pages/img/sample.png&quot; alt=&quot;image&quot; /&gt;
^ The above image will be superimposed over the reflection from mirror displaying only the bright portions.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Weather is obtained using your current location&lt;/li&gt;
  &lt;li&gt;Schedule is obtained from Google Calendar&lt;/li&gt;
  &lt;li&gt;Notifications are mirrored from the user’s mobile phone via PushBullet&lt;/li&gt;
  &lt;li&gt;Facial Recognition ensures that notifications/schedule displayed are those of the person standing in front of the mirror&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Received the &lt;strong&gt;Best Applicative Project&lt;/strong&gt; during the Science &amp;amp; Technology Summer
Camp 2016.&lt;/p&gt;

&lt;p&gt;Website: &lt;a href=&quot;http://11000011.github.io/Smart-Mirror&quot;&gt;http://11000011.github.io/Smart-Mirror&lt;/a&gt;
LaTeX Report: &lt;a href=&quot;http://github.com/11000011/Smart-Mirror/raw/gh-pages/report.pdf&quot;&gt;report.pdf&lt;/a&gt;
Github Wiki: &lt;a href=&quot;http://github.com/11000011/Smart-Mirror/wiki/&quot;&gt;Smart Mirror Wiki&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 06 Jul 2016 11:12:00 +0000</pubDate>
        <link>http://pclub.in/project/2016/07/06/smartmirror.html</link>
        <guid isPermaLink="true">http://pclub.in/project/2016/07/06/smartmirror.html</guid>
        
        <category>summer16</category>
        
        <category>project</category>
        
        
        <category>project</category>
        
        <category>Project</category>
        
      </item>
    
      <item>
        <title>Managing Processes in Linux</title>
        <description>&lt;h1 id=&quot;managing-processes-in-linux&quot;&gt;Managing Processes in Linux&lt;/h1&gt;

&lt;h3 id=&quot;the-ps-command&quot;&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;ps&lt;/code&gt; command&lt;/h3&gt;
&lt;p&gt;Short for &lt;strong&gt;&lt;em&gt;process status&lt;/em&gt;&lt;/strong&gt; . Returns all &lt;em&gt;currently running processes&lt;/em&gt; running on the system.&lt;/p&gt;

&lt;p&gt;When called without arguments, information return can be a little useless.&lt;/p&gt;

&lt;p&gt;To get a more clear picture we use &lt;code class=&quot;highlighter-rouge&quot;&gt;ps -aux&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;This tells &lt;code class=&quot;highlighter-rouge&quot;&gt;ps&lt;/code&gt;  to return list of process from &lt;strong&gt;all users&lt;/strong&gt;
We can also use &lt;code class=&quot;highlighter-rouge&quot;&gt;ps -ef&lt;/code&gt; to view &lt;strong&gt;all running process&lt;/strong&gt;
where &lt;code class=&quot;highlighter-rouge&quot;&gt;-e&lt;/code&gt;is used to &lt;strong&gt;display all processes&lt;/strong&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt; is used to &lt;strong&gt;display in full format listing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To view all running processes that belongs to a particular user, we use &lt;code class=&quot;highlighter-rouge&quot;&gt;ps -f -u username1,username2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: We can see processes limited to a set of users by seperating the usernames by a comma()
Often &lt;code class=&quot;highlighter-rouge&quot;&gt;ps aux | grep commandname&lt;/code&gt; is used to get details of process with the given command&lt;/p&gt;

&lt;p&gt;To see all proccesses in a tree structure we use &lt;code class=&quot;highlighter-rouge&quot;&gt;ps axjf&lt;/code&gt;
Using this we get to know the parent processes (by getting an hierarchical structure)&lt;/p&gt;

&lt;h3 id=&quot;pids&quot;&gt;PIDs&lt;/h3&gt;

&lt;p&gt;Each process is assigned a &lt;em&gt;unique&lt;/em&gt; &lt;strong&gt;Process ID (PID)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Each process also has a &lt;strong&gt;Parent Process ID (PPID)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To filter your searches with a specific &lt;strong&gt;PID&lt;/strong&gt; use &lt;code class=&quot;highlighter-rouge&quot;&gt;ps -f -p PIDofProcess&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Similarly to filter by PPID use &lt;code class=&quot;highlighter-rouge&quot;&gt;ps -f --ppid PPIDofProcess&lt;/code&gt;
Also you may get pid by &lt;code class=&quot;highlighter-rouge&quot;&gt;pidof commandname&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;killing-the-process&quot;&gt;Killing the process&lt;/h3&gt;

&lt;h4 id=&quot;the-kill-command&quot;&gt;The kill command&lt;/h4&gt;

&lt;p&gt;It is used to send a signal to a process or to kill a process&lt;/p&gt;

&lt;p&gt;Basic Synatx is &lt;code class=&quot;highlighter-rouge&quot;&gt;kill -SIGNAL PID&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Signals of our interest&lt;/strong&gt; : SIGTERM &amp;amp; SIGKILL&lt;/p&gt;

&lt;h4 id=&quot;sigterm&quot;&gt;SIGTERM&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kill PID&lt;/code&gt; will send a SIGTERM signal by default. The application can determine what to do once it receives a SIGTERM signal&lt;/p&gt;

&lt;p&gt;It may stop the process immediately, may stop after a delay after cleaning resources or might run endlessly&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kill -SIGTERM PID&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;kill -15 PID&lt;/code&gt; are same&lt;/p&gt;

&lt;h4 id=&quot;sigkill-the-super-power&quot;&gt;SIGKILL (The Super Power)&lt;/h4&gt;

&lt;p&gt;Kind of Force Kill&lt;/p&gt;

&lt;p&gt;Unlike SIGTERM , SIGKILL cannot be ignored by the process , even the process is not aware when SIGKILL signal is sent.&lt;/p&gt;

&lt;p&gt;While there are rare cases where an external influence (like waiting I/O) may be the reason of ignoring SIGKILL. But it works in most cases !
&lt;code class=&quot;highlighter-rouge&quot;&gt;kill -SIGKILL PID&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;kill -9 PID&lt;/code&gt; is same&lt;/p&gt;

&lt;p&gt;Suppose your firefox is not responding and you decided to kill the process : &lt;code class=&quot;highlighter-rouge&quot;&gt;kill -9 `pidof firefox`&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;the-killall-command&quot;&gt;The killall command&lt;/h4&gt;

&lt;p&gt;Too lazy to find the PID of a process ? Here have a look at the killall command&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example (killing firefox)&lt;/strong&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;killall -9 firefox&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;pkill command&lt;/strong&gt;
Almost the same as &lt;code class=&quot;highlighter-rouge&quot;&gt;kilall&lt;/code&gt; command. The only difference being you don’t have to provide the exact process name, partial process name will do.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Beware you might also kill other process which you didn’t intend to kill&lt;/strong&gt;
&lt;em&gt;Example (killing firefox)&lt;/em&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;pkill firef&lt;/code&gt; will also do ! :D&lt;/p&gt;

&lt;h4 id=&quot;the-xkill-command&quot;&gt;The xkill command&lt;/h4&gt;

&lt;p&gt;If you are new to using &lt;strong&gt;LINUX&lt;/strong&gt; or hate the bash, you may do it the GUI way :P&lt;/p&gt;

&lt;p&gt;Simply  type &lt;code class=&quot;highlighter-rouge&quot;&gt;xkill&lt;/code&gt; in the terminal and it will ask you to select a window whose client you wish to kill.&lt;/p&gt;

&lt;p&gt;Fast if you have a GUI :P&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Have fun killing !!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fin&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 01 Jun 2016 16:06:00 +0000</pubDate>
        <link>http://pclub.in/tutorial/2016/06/01/linuxprocess.html</link>
        <guid isPermaLink="true">http://pclub.in/tutorial/2016/06/01/linuxprocess.html</guid>
        
        <category>linux</category>
        
        <category>bash</category>
        
        
        <category>tutorial</category>
        
      </item>
    
  </channel>
</rss>
