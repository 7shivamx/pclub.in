<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming Club IIT Kanpur</title>
    <description>The Programming Club, IIT Kanpur
</description>
    <link>http://pclub.in/</link>
    <atom:link href="http://pclub.in/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 26 Oct 2019 14:57:49 +0000</pubDate>
    <lastBuildDate>Sat, 26 Oct 2019 14:57:49 +0000</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>Travis CI</title>
        <description>&lt;h4 id=&quot;description&quot;&gt;Description&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;The aim is to streamline all further development of LifeIITK such that there is consistency and reproducibility across developers.&lt;/li&gt;
  &lt;li&gt;Setup proper development, test and production environments for lifeiitk.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;relevant-technologies&quot;&gt;Relevant Technologies&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Docker&lt;/li&gt;
  &lt;li&gt;Travis CI&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;application-task&quot;&gt;Application Task&lt;/h4&gt;
&lt;p&gt;Write a &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; that spins up 3 docker containers&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;node.js backend&lt;/li&gt;
  &lt;li&gt;react frontend&lt;/li&gt;
  &lt;li&gt;mysql database.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For reference look up &lt;a href=&quot;https://github.com/yugeshk/hotel-management/blob/master/docker-compose.yml&quot;&gt;this&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;repository&quot;&gt;Repository&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/life-iitk&quot;&gt;Life@IITK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;mentor&quot;&gt;Mentor&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Yugesh Kothari&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 25 Oct 2019 21:08:00 +0000</pubDate>
        <link>http://pclub.in/wocproject/project/2019/10/25/lifeiitk-travis-ci.html</link>
        <guid isPermaLink="true">http://pclub.in/wocproject/project/2019/10/25/lifeiitk-travis-ci.html</guid>
        
        <category>winter19</category>
        
        <category>wocproject</category>
        
        
        <category>wocproject</category>
        
        <category>Project</category>
        
      </item>
    
      <item>
        <title>Nomination Portal</title>
        <description>&lt;h4 id=&quot;description&quot;&gt;Description&lt;/h4&gt;

&lt;p&gt;The portal will be used to announce empty positions in gymkhana and students can apply for the positions on portal itself.&lt;/p&gt;

&lt;p&gt;This will have the following projects :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Creating new positions and announcing vacancy: It will be used by authorised users to create new positions in gymkhana whenever required and to announce vacancies.&lt;/li&gt;
  &lt;li&gt;Filing nominations: Students can apply for vacant positions using the portal.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This portal will be added to the Life@IITK application.&lt;/p&gt;

&lt;h4 id=&quot;relevant-technologies&quot;&gt;Relevant Technologies&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Python&lt;/li&gt;
  &lt;li&gt;Django&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;repository&quot;&gt;Repository&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/life-iitk&quot;&gt;Life@IITK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;mentor&quot;&gt;Mentor&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Aditya Gulati&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 25 Oct 2019 21:08:00 +0000</pubDate>
        <link>http://pclub.in/wocproject/project/2019/10/25/lifeiitk-nomination-portal.html</link>
        <guid isPermaLink="true">http://pclub.in/wocproject/project/2019/10/25/lifeiitk-nomination-portal.html</guid>
        
        <category>winter19</category>
        
        <category>wocproject</category>
        
        
        <category>wocproject</category>
        
        <category>Project</category>
        
      </item>
    
      <item>
        <title>Music App</title>
        <description>&lt;h4 id=&quot;description&quot;&gt;Description&lt;/h4&gt;

&lt;p&gt;Develop a music app for the campus with the following features:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;See music that friends are playing currently&lt;/li&gt;
  &lt;li&gt;Private mode to hide currently playing music&lt;/li&gt;
  &lt;li&gt;Music rooms - to livestream music to all users currently using the app and live updation of playlists&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This project will have multiple members. (approximately 3 to 4)&lt;/p&gt;

&lt;h4 id=&quot;application-task&quot;&gt;Application Task&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Setup the below mentioned repo and get it run locally.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;relevant-technologies&quot;&gt;Relevant Technologies&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;TypeScript/JavaScript&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;repository&quot;&gt;Repository&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Cloud-Player/web&quot;&gt;Music Player&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;mentor&quot;&gt;Mentor&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Yugesh Kothari&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 25 Oct 2019 21:08:00 +0000</pubDate>
        <link>http://pclub.in/wocproject/project/2019/10/25/lifeiitk-music.html</link>
        <guid isPermaLink="true">http://pclub.in/wocproject/project/2019/10/25/lifeiitk-music.html</guid>
        
        <category>winter19</category>
        
        <category>wocproject</category>
        
        
        <category>wocproject</category>
        
        <category>Project</category>
        
      </item>
    
      <item>
        <title>Mess Portal</title>
        <description>&lt;h1 id=&quot;lifeiitk&quot;&gt;&lt;a href=&quot;https://github.com/life-iitk&quot;&gt;Life@IITK&lt;/a&gt;&lt;/h1&gt;

&lt;h4 id=&quot;mess-portal&quot;&gt;Mess portal&lt;/h4&gt;

&lt;p&gt;Mess portal will be used as a one stop to view mess menu and other details such as timing of all messes. It will be a feature integrated in Life IITK app.&lt;/p&gt;
</description>
        <pubDate>Fri, 25 Oct 2019 21:08:00 +0000</pubDate>
        <link>http://pclub.in/wocproject/project/2019/10/25/lifeiitk-mess-portal.html</link>
        <guid isPermaLink="true">http://pclub.in/wocproject/project/2019/10/25/lifeiitk-mess-portal.html</guid>
        
        <category>winter19</category>
        
        <category>wocproject</category>
        
        
        <category>wocproject</category>
        
        <category>Project</category>
        
      </item>
    
      <item>
        <title>Map Integration</title>
        <description>&lt;h4 id=&quot;description&quot;&gt;Description&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Develop a 3D map for the Life IITK app.&lt;/li&gt;
  &lt;li&gt;The map will have all the locations of campus tagged and can be used to see the upcoming events at any venue.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;relevant-technologies&quot;&gt;Relevant Technologies&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Python&lt;/li&gt;
  &lt;li&gt;Django&lt;/li&gt;
  &lt;li&gt;React&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;repository&quot;&gt;Repository&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/life-iitk&quot;&gt;Life@IITK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;mentor&quot;&gt;Mentor&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Aditya Gulati&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 25 Oct 2019 21:08:00 +0000</pubDate>
        <link>http://pclub.in/wocproject/project/2019/10/25/lifeiitk-map.html</link>
        <guid isPermaLink="true">http://pclub.in/wocproject/project/2019/10/25/lifeiitk-map.html</guid>
        
        <category>winter19</category>
        
        <category>wocproject</category>
        
        
        <category>wocproject</category>
        
        <category>Project</category>
        
      </item>
    
      <item>
        <title>Election Portal</title>
        <description>&lt;h1 id=&quot;lifeiitk&quot;&gt;&lt;a href=&quot;https://github.com/life-iitk&quot;&gt;Life@IITK&lt;/a&gt;&lt;/h1&gt;

&lt;h4 id=&quot;election-portal&quot;&gt;Election portal&lt;/h4&gt;

&lt;p&gt;Portal that will handle all the election related work online will be developed and integrated to the currently existing Life IITK app. It will include the following projects.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Position creation: To create and notify about new positions for elections only by authorised accounts.&lt;/li&gt;
  &lt;li&gt;Filing nominations: To file nominations for running in elections. This will also submitting details of campaigners.&lt;/li&gt;
  &lt;li&gt;Actual voting: To handle voting on election day. It should be secure and able to cater to the election day needs of institute.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;repository&quot;&gt;Repository&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/life-iitk&quot;&gt;Life@IITK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;mentor&quot;&gt;Mentor&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Priydarshi Singh&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 25 Oct 2019 21:08:00 +0000</pubDate>
        <link>http://pclub.in/wocproject/project/2019/10/25/lifeiitk-election-portal.html</link>
        <guid isPermaLink="true">http://pclub.in/wocproject/project/2019/10/25/lifeiitk-election-portal.html</guid>
        
        <category>winter19</category>
        
        <category>wocproject</category>
        
        
        <category>wocproject</category>
        
        <category>Project</category>
        
      </item>
    
      <item>
        <title>Buy and Sell</title>
        <description>&lt;h4 id=&quot;description&quot;&gt;Description&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;The current buy and sell forum of iitk on facebook is very disorganised and chaotic.&lt;/li&gt;
  &lt;li&gt;Develop and integrate a portal to buy and sell things on campus into the Life@IITK app.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;relevant-technologies&quot;&gt;Relevant Technologies&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Python&lt;/li&gt;
  &lt;li&gt;Django&lt;/li&gt;
  &lt;li&gt;React&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;repository&quot;&gt;Repository&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/life-iitk&quot;&gt;Life@IITK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;mentor&quot;&gt;Mentor&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Aditya Gulati&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 25 Oct 2019 21:08:00 +0000</pubDate>
        <link>http://pclub.in/wocproject/project/2019/10/25/lifeiitk-buy-and-sell.html</link>
        <guid isPermaLink="true">http://pclub.in/wocproject/project/2019/10/25/lifeiitk-buy-and-sell.html</guid>
        
        <category>winter19</category>
        
        <category>wocproject</category>
        
        
        <category>wocproject</category>
        
        <category>Project</category>
        
      </item>
    
      <item>
        <title>Blogs</title>
        <description>&lt;h4 id=&quot;description&quot;&gt;Description&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Develop a blog feature for the Life@IITK app, where various clubs and cells can put up their blogs and students can follow blogs of their interest.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;relevant-technologies&quot;&gt;Relevant Technologies&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Python&lt;/li&gt;
  &lt;li&gt;Django&lt;/li&gt;
  &lt;li&gt;React&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;repository&quot;&gt;Repository&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/life-iitk&quot;&gt;Life@IITK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;mentor&quot;&gt;Mentor&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Aditya Gulati&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 25 Oct 2019 21:08:00 +0000</pubDate>
        <link>http://pclub.in/wocproject/project/2019/10/25/lifeiitk-blogs.html</link>
        <guid isPermaLink="true">http://pclub.in/wocproject/project/2019/10/25/lifeiitk-blogs.html</guid>
        
        <category>winter19</category>
        
        <category>wocproject</category>
        
        
        <category>wocproject</category>
        
        <category>Project</category>
        
      </item>
    
      <item>
        <title>Introductory Workshop 2019</title>
        <description>&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Hello world!&lt;br /&gt;
Welcome to the Programming Club Introductory Workshop 2019!&lt;/p&gt;

&lt;h2 id=&quot;slack&quot;&gt;Slack&lt;/h2&gt;
&lt;p&gt;First of all, please join our slack at &lt;a href=&quot;https://pclubiitk.slack.com&quot;&gt;https://pclubiitk.slack.com&lt;/a&gt;
and join the channel &lt;code class=&quot;highlighter-rouge&quot;&gt;#y19&lt;/code&gt; to receive future notifications regarding events and other stuff
from slack announcements directly.&lt;/p&gt;

&lt;h2 id=&quot;lifeiitk&quot;&gt;Life@IITK&lt;/h2&gt;
&lt;p&gt;Programming Club worked extremely hard this summer to design your life @ IITK. We’ve brought together the various factes that will span your wonderful journey through 4 years. You’ll find your personal academic schedule, can subscribe to Gymkhana events, gloat over your PORs, feel hungry with the mess menus of all halls, not get lost with the Map and plan your year with a customizable calendar.&lt;/p&gt;

&lt;h2 id=&quot;terminal&quot;&gt;Terminal&lt;/h2&gt;
&lt;p&gt;A vital skill for any wanna-be programmer.&lt;/p&gt;

&lt;p&gt;Try opening Terminal (sometimes known as Command Line) from the top-left menus. You should find it in the ‘System’ applications.&lt;/p&gt;

&lt;p&gt;All the computer systems running today run over a terminal. You can do everything possible on a graphical system using this terminal (except of course the things requiring visual manipulation).&lt;/p&gt;

&lt;p&gt;Some operating systems like Ubuntu might have a shortcut for this, you can open it using &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl+Alt+T&lt;/code&gt;, but &lt;em&gt;not&lt;/em&gt; in the CC machines.&lt;/p&gt;

&lt;p&gt;This is where you should learn to do all stuff related to programming, since this gives you &lt;em&gt;unfathomable&lt;/em&gt; power.&lt;/p&gt;

&lt;h2 id=&quot;directory-structure&quot;&gt;Directory structure&lt;/h2&gt;
&lt;p&gt;Linux organizes files and folders in the following way:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Files are kept inside folders&lt;/li&gt;
  &lt;li&gt;You can enter and exit folders just like in Windows`&lt;/li&gt;
  &lt;li&gt;Folders are named in the following way: &lt;code class=&quot;highlighter-rouge&quot;&gt;/path-to-folder/folder-name&lt;/code&gt;. This is what completely describes a folder (or a file).&lt;/li&gt;
  &lt;li&gt;We will be using the word &lt;code class=&quot;highlighter-rouge&quot;&gt;directory&lt;/code&gt; for folders. Please note this.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To play around with this, try to use the following commands:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ls

# Lists contents of current folder
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd Desktop

# Move to the folder named Desktop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd ..

# Go Back to previous folder
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd ~

# Go back to home folder(where you start on opening a terminal)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ touch try.txt

# Create a new file named try.txt




&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Command&lt;/td&gt;
      &lt;td&gt;Full form&lt;/td&gt;
      &lt;td&gt;Description&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ls&lt;/td&gt;
      &lt;td&gt;list screen&lt;/td&gt;
      &lt;td&gt;List all the files and folders in current directory&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cd&lt;/td&gt;
      &lt;td&gt;change directory&lt;/td&gt;
      &lt;td&gt;Enter a folder whose path is known&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;pwd&lt;/td&gt;
      &lt;td&gt;present working directory&lt;/td&gt;
      &lt;td&gt;Full name of the current folder you are in&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;~&lt;/td&gt;
      &lt;td&gt;tilde&lt;/td&gt;
      &lt;td&gt;Short form for your home folder&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl+c&lt;/code&gt;(keyboard)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Exit/Cancel the current command&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;exit&lt;/td&gt;
      &lt;td&gt;Exit&lt;/td&gt;
      &lt;td&gt;Exit the terminal&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;vim&quot;&gt;VIM&lt;/h2&gt;
&lt;p&gt;We will be using &lt;code class=&quot;highlighter-rouge&quot;&gt;vim&lt;/code&gt; to write programs. Open it from the applications menu. It’s very much like &lt;code class=&quot;highlighter-rouge&quot;&gt;notepad&lt;/code&gt; from Windows.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vim try.txt

# Opens the file in vim
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Type “An interesting programming activity”&lt;/p&gt;

&lt;p&gt;If you are currently in insert or append mode, press ‘ESC’ key.&lt;/p&gt;

&lt;p&gt;Press : (colon). The cursor should reappear at the lower left corner of the screen beside a colon prompt.&lt;/p&gt;

&lt;p&gt;Type wq! and press Enter key to save and exit&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat try.txt

# Displays the content of the file.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;python-interpreter&quot;&gt;Python Interpreter&lt;/h1&gt;

&lt;p&gt;Try running &lt;code class=&quot;highlighter-rouge&quot;&gt;python&lt;/code&gt; command in the terminal. You should see something like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Python 2.7.10 (default, Aug 12 2017, 22:05:31)
[GCC 4.9.3] on linux2
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&amp;gt;&amp;gt;&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; is the place where you type. Try typing some of the
commands like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;2+2&lt;/li&gt;
  &lt;li&gt;print “hello world!”&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;python&quot;&gt;Python&lt;/h1&gt;

&lt;p&gt;Here are a few python expressions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a = 2+2&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;print &quot;hello world!&quot;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;print a&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;print a*2&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Try typing the above lines in vim and then saving the file as
&lt;code class=&quot;highlighter-rouge&quot;&gt;test.py&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After saving the file, you will need to navigate to its location
from the terminal. Once you are in the folder containing &lt;code class=&quot;highlighter-rouge&quot;&gt;test.py&lt;/code&gt; such
that &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; shows &lt;code class=&quot;highlighter-rouge&quot;&gt;test.py&lt;/code&gt; as one of the files, run:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python test.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The output would be something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hello world!
4
8
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You used an &lt;em&gt;operator&lt;/em&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;a*2&lt;/code&gt; - the multiplication operator. Other operators you need to try out are:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;+&lt;/td&gt;
      &lt;td&gt;Addition&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;Subtraction&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;*&lt;/td&gt;
      &lt;td&gt;Multiplication&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/&lt;/td&gt;
      &lt;td&gt;Division&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;**&lt;/td&gt;
      &lt;td&gt;To the power of&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;ifelse&quot;&gt;If/Else&lt;/h2&gt;

&lt;p&gt;Now that you know how to write simple things, let’s proceed to something interesting.&lt;/p&gt;

&lt;p&gt;Python reads spaces and tabs in your program as well. So for writing a complicated
instruction for the computer, we will need to use multiple lines.
We will &lt;code class=&quot;highlighter-rouge&quot;&gt;indent&lt;/code&gt; the lines in such a way that the computer can understand that
they are meant to be read together.&lt;/p&gt;

&lt;p&gt;Try the following:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a is not zero&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a is zero&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That’s it! See?&lt;/p&gt;

&lt;p&gt;Sometimes one condition isn’t enough though. In that case, you are allowed to chain up multiple conditions using &lt;code class=&quot;highlighter-rouge&quot;&gt;and&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;or&lt;/code&gt; like so:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Condition successful&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;condition failed&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That’s all good, but what if you want multiple checks on a variable? For example, let’s say you want to do Action 1 if &lt;code class=&quot;highlighter-rouge&quot;&gt;a&amp;lt;10&lt;/code&gt; and Action 2 if &lt;code class=&quot;highlighter-rouge&quot;&gt;a=10&lt;/code&gt; and Action 3 when &lt;code class=&quot;highlighter-rouge&quot;&gt;a&amp;gt;10&lt;/code&gt;, what then? This is where &lt;code class=&quot;highlighter-rouge&quot;&gt;if-elif-elif-elif-...-else&lt;/code&gt; construct comes into the picture. Use it like this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a is less than 0&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a is between 0 and 4&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a is between 4 and 10&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a is bigger than 10&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;loops&quot;&gt;Loops&lt;/h2&gt;

&lt;p&gt;Now for some loopy-loops!&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;arrays&quot;&gt;Arrays&lt;/h2&gt;

&lt;p&gt;Now for some adorable arrays!&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;raw_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id=&quot;functions&quot;&gt;Functions&lt;/h2&gt;

&lt;p&gt;Adding modularity to your code&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;reading-input&quot;&gt;Reading input&lt;/h2&gt;
&lt;p&gt;You can read input from the user using something like this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;raw_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello mr. &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;raw_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;See what happens there?&lt;/p&gt;

&lt;h1 id=&quot;codechef&quot;&gt;CodeChef!&lt;/h1&gt;
&lt;p&gt;Try this link &lt;a href=&quot;https://www.codechef.com/problems/TEST&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Can you solve this problem? Try writing a program for this! Please give it a try before you scroll down.&lt;/p&gt;

&lt;p&gt;It’s quite small! Here’s the solution!&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;raw_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So you should now &lt;strong&gt;certainly&lt;/strong&gt; create an account on CodeChef! Try submitting the solution there (don’t forget to select Python when you submit). Happy coding!&lt;/p&gt;

&lt;h1 id=&quot;follow-up&quot;&gt;Follow up&lt;/h1&gt;

&lt;p&gt;Congrats on finishing up to here! If you’re now pumped up for trying out some more challenges, try your hand at the following problems:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codechef.com/problems/HS08TEST&quot;&gt;ATM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codechef.com/problems/FCTRL&quot;&gt;Factorial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codechef.com/problems/INTEST&quot;&gt;Enormous Input Test&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codechef.com/problems/TLG&quot;&gt;The Lead Game&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt; C/C++/Java are commonly the preferred languages while participating in competitive contests. Recently, ACM ICPC has started allowing Python as well.&lt;/p&gt;

&lt;p&gt;The ultimate feel to programming.
P.S:-Attempt at your own risk.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://capturetheflag.withgoogle.com/#beginners/misc-satellite&quot;&gt;Google Hacking Practice competitons&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 30 Jul 2019 04:55:00 +0000</pubDate>
        <link>http://pclub.in/pclub/2019/07/30/introlecturey19.html</link>
        <guid isPermaLink="true">http://pclub.in/pclub/2019/07/30/introlecturey19.html</guid>
        
        <category>pclub</category>
        
        <category>introduction</category>
        
        
        <category>pclub</category>
        
      </item>
    
      <item>
        <title>Data Encryption Standard</title>
        <description>&lt;p&gt;Data encryption standard is a &lt;strong&gt;symmetric-key block cipher&lt;/strong&gt; published by National Institute of Standard and Technology(NIST).&lt;/p&gt;

&lt;h3 id=&quot;symmetric-key-block-cipher&quot;&gt;Symmetric-key block cipher&lt;/h3&gt;

&lt;p&gt;Let us first understand what this means.
Every encryption algorithm uses a key to encrypt data and decrypt it. Since the key used for encryption and decryption is same in DES it is a symmetric-key cipher. It encrypts a 64-bit block at once so it is also a block cipher. Hence the name “symmetric-key block cipher”.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Now we are ready to dive into what happens to the data in DES:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The input data is passed through 16 similar rounds where the input is broken into two blocks(32-bits each) and the right block is passed through an encrypting function which gives 32-bit output. This output is then xor’ed with left block and the blocks obtained serve as input to the next round. Each round has a different 48-bit key which is generated from a 64-bit key using key-scheduling function.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://manansingh.github.io/Cryptolab-Offline/images/c/des-1.GIF&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step1-initial-permutation&quot;&gt;Step1: Initial Permutation&lt;/h2&gt;
&lt;p&gt;The 64-bits input first goes through a standard permutation which is known publicly. It is available on the internet.&lt;/p&gt;

&lt;p&gt;After this permutation, &lt;strong&gt;the rest of the steps are common to all 16 rounds&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;step2-expansion-of-input&quot;&gt;Step2: Expansion of input&lt;/h2&gt;
&lt;p&gt;The permuted input is now broken into two blocks of 32-bits each. The right block is always input of the encrypting function while the left block remains unchanged.
 So we have this 32-bits input and a 48-bits key. The first thing we do is expand the 32-bits input to 48 bits.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.tutorialspoint.com/cryptography/images/permutation_logic.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step3-xor-input-with-key&quot;&gt;Step3: XOR input with key&lt;/h2&gt;
&lt;p&gt;The right block of input which was expanded to 48-bits is now xor’ed with the key. XOR means bit by bit addition modulo 2.&lt;/p&gt;

&lt;h2 id=&quot;step3s-boxes&quot;&gt;Step3:S Boxes&lt;/h2&gt;
&lt;p&gt;This step makes use of S boxes which are non-linear mappings from 6-bits input to a 4-bits output.
The xor’ed value (48 bit) from the previous step is divided into 8 blocks of 6-bits. The first block is fed to S1, second to S2 and so on. Each S box now maps the 6-bit entry to a 4-bit output, so the output of all S boxes form a 32-bits output.The inner configurations of S boxes is also available on the internet.&lt;/p&gt;

&lt;h2 id=&quot;step4-permutation-again&quot;&gt;Step4: Permutation again!&lt;/h2&gt;
&lt;p&gt;The output of S boxes, forming 32-bits, is again permuted to give 32-bits block according to another standard permutation table.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.pngkit.com/png/detail/375-3754049_data-encryption-standard-infobox-diagram-des-algorithm-s.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The encrypting function&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;step5-xor-with-left-block&quot;&gt;Step5: XOR with left block&lt;/h2&gt;
&lt;p&gt;The final output obtained from the previous step is now xor’ed with the left block. This xor’ed value now serves as the right block for next round and the left block will be the right block of the previous round before operating the encrypting function.&lt;/p&gt;

&lt;h4 id=&quot;ln--rn-1&quot;&gt;L&lt;sub&gt;n&lt;/sub&gt; = R&lt;sub&gt;n-1&lt;/sub&gt;&lt;br /&gt;&lt;/h4&gt;
&lt;h4 id=&quot;rn--ln-1--xor-fkn-1-rn-1&quot;&gt;R&lt;sub&gt;n&lt;/sub&gt; = L&lt;sub&gt;n-1&lt;/sub&gt;  xor f(K&lt;sub&gt;n-1&lt;/sub&gt;, R&lt;sub&gt;n-1&lt;/sub&gt;)&lt;/h4&gt;

&lt;h2 id=&quot;step6-last-permutation&quot;&gt;Step6: Last Permutation&lt;/h2&gt;
&lt;p&gt;After last round, the bits are permuted for one last time. This permutation is the opposite of initial permutation. It is chosen this way to make DES completely symmetric so that nothing new has to be done to decrypt ciphered data.&lt;/p&gt;

&lt;h1 id=&quot;decryption&quot;&gt;Decryption&lt;/h1&gt;
&lt;p&gt;Decryption in DES is very easy. Since it is a symmetric cipher, all we need to do is put the encrypted text as input and use keys in opposite order. The output you will get will be the plain text.&lt;/p&gt;

&lt;h2 id=&quot;security&quot;&gt;Security&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;DES was published as an official Federal Information Processing Standard (FIPS) for the United States in 1977.&lt;/li&gt;
  &lt;li&gt;It is no more a secure standard.&lt;/li&gt;
  &lt;li&gt;Due to small length of key(56-bits), key can be found using brute force method.&lt;/li&gt;
  &lt;li&gt;Differential cryptanalysis can also reduce the area of search for the possible key.&lt;/li&gt;
  &lt;li&gt;In July 2017, a chosen-plaintext attack utilizing a rainbow table can recover the DES key for a single specific chosen plaintext 1122334455667788 in 25 seconds. A new rainbow table has to be calculated per plaintext.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 15 Apr 2019 11:04:00 +0000</pubDate>
        <link>http://pclub.in/cryptography/2019/04/15/DES.html</link>
        <guid isPermaLink="true">http://pclub.in/cryptography/2019/04/15/DES.html</guid>
        
        <category>Cryptography</category>
        
        <category>DES</category>
        
        <category>Symmetric Cipher</category>
        
        <category>Block Cipher</category>
        
        
        <category>Cryptography</category>
        
      </item>
    
  </channel>
</rss>
